/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TelasForaDeUso;

import Atributos.Devedores;
import Atributos.Debitos;
import Atributos.Enderecos;
import Atributos.Telefones;
import Banco.ClientesDAO;
import Banco.DevedoresDAO;
import Banco.DebitosDAO;
import Banco.EnderecosDAO;
import Banco.TelefonesDAO;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author User
 */
public class ListaDebitos extends javax.swing.JFrame {

    /**
     * Creates new form ListaDebitos
     */
    public ListaDebitos() {
        initComponents();
        desativaCampos();
    }
    
    private void desativaCampos(){
        jTFCPFCNPJ2.setEditable(false);
        jTFNome2.setEditable(false);
    }
    
    DefaultTableModel model = new DefaultTableModel();
    DefaultTableModel modelTelefones = new DefaultTableModel();
    DefaultTableModel modelEnderecos = new DefaultTableModel();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTFPesquisar = new javax.swing.JTextField();
        jBPesquisar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTFNome2 = new javax.swing.JTextField();
        jTFCPFCNPJ2 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTTelefones2 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTEnderecos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTDebitos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Pesquisar por:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Devedor", "Cliente" }));

        jBPesquisar.setText("Pesquisar");
        jBPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do devedor"));

        jLabel6.setText("Nome:");

        jLabel7.setText("CPF/CNPJ:");

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Telefones e E-mails"));

        jTTelefones2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cadastrado por", "Telefone", "E-mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTTelefones2);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Endereços"));

        jTEnderecos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cadastrado por", "Rua", "Número", "Complemento", "Bairro", "Cidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTEnderecos);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 818, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setText("Novo Devedor");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Alterar dados");

        jButton3.setText("Desativar");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTFNome2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                                    .addComponent(jTFCPFCNPJ2, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTFNome2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTFCPFCNPJ2))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );

        jTDebitos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cliente", "Data da Compra", "Valor", "Descrição", "Comprovante"
            }
        ));
        jScrollPane5.setViewportView(jTDebitos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBPesquisar))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarActionPerformed
        pesquisarDebitos("%"+jTFPesquisar.getText()+"%");
    }//GEN-LAST:event_jBPesquisarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pesquisarDebitos(String nome){
        DevedoresDAO devedorDAO = new DevedoresDAO();
        TelefonesDAO telDAO = new TelefonesDAO();
        EnderecosDAO endDAO = new EnderecosDAO();
        DebitosDAO debitosDAO = new DebitosDAO();
        
        Devedores devedor = new Devedores();
        Telefones tel = new Telefones();
        Enderecos end = new Enderecos();
        Debitos debitos = new Debitos();
        
        ArrayList<Devedores> listaDevedores = devedorDAO.buscaDevedorPorNome(nome);
        ArrayList<Telefones> listaTelefones;
        ArrayList<Enderecos> listaEnderecos;
        ArrayList<Debitos> listaDebitos;
        
        
        model.setNumRows(0);
        modelTelefones.setNumRows(0);
        modelEnderecos.setNumRows(0);
        
        for (int i = 0; i < listaDevedores.size(); i++) {
            listaTelefones = telDAO.buscaTelefoneDevedor(listaDevedores.get(i).getIdDevedor());
            povoaTabelaTelefone(listaTelefones);
            
            listaEnderecos = endDAO.buscaEndDevedor(listaDevedores.get(i).getIdDevedor());
            povoaTabelaEndereco(listaEnderecos);
            
            listaDebitos  = debitosDAO.buscaDebitos(listaDevedores.get(i).getIdDevedor());
            povoaTabelaDebitos(listaDebitos);
            
            jTFNome2.setText(listaDevedores.get(0).getNomeDevedor());
            jTFCPFCNPJ2.setText(listaDevedores.get(0).getCpfcnpj());
        }
        
        
        
    }
    
    private String converteDataParaApresentacao(LocalDate data){
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String formattedDate = data.format(formatter);

        return formattedDate;
    }
    
    private LocalDate converteDataParaBanco(String data){
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate localDate = LocalDate.parse(data, formatter);

        return localDate;
    }
    
    
    private void povoaTabelaDebitos(ArrayList<Debitos> lista){
        ClientesDAO clienteDAO = new ClientesDAO();
        model = (DefaultTableModel) jTDebitos.getModel();
        for (int i = 0; i < lista.size(); i++) {
            model.addRow(new Object[]{
                clienteDAO.buscaNomeCliente(lista.get(i).getIdCliente()),
                converteDataParaApresentacao(lista.get(i).getDataCompra()),
                lista.get(i).getValor(),
                lista.get(i).getDescricao(),
                
                lista.get(i).getComprovantes().get(0).getArquivo()
            });
        }
        // Configuração do renderizador personalizado para a coluna do botão
        jTDebitos.getColumn("Comprovante").setCellRenderer(new BotaoRenderer());

        // Configuração do editor de célula para a coluna do botão
        jTDebitos.getColumn("Comprovante").setCellEditor(new BotaoEditor());
    }
    
    private void povoaTabelaTelefone(ArrayList<Telefones> lista){
        ClientesDAO clienteDAO = new ClientesDAO();
        modelTelefones = (DefaultTableModel) jTTelefones2.getModel();
        for (int i = 0; i < lista.size(); i++) {
            if(!lista.get(i).getTelefone().isBlank()){
                modelTelefones.addRow(new Object[]{
                    clienteDAO.buscaNomeCliente(lista.get(i).getIdCliente()),
                    lista.get(i).getTelefone(),
                    lista.get(i).getEmail()
                });
            }
        }
    }
    
    private void povoaTabelaEndereco(ArrayList<Enderecos> listaEnd){
        ClientesDAO clienteDAO = new ClientesDAO();
        modelEnderecos = (DefaultTableModel) jTEnderecos.getModel();
        for (int i = 0; i < listaEnd.size(); i++) {
            modelEnderecos.addRow(new Object[]{
                clienteDAO.buscaNomeCliente(listaEnd.get(i).getIdCliente()),
                listaEnd.get(i).getRua(),
                listaEnd.get(i).getNumero(),
                listaEnd.get(i).getComplemento(),
                listaEnd.get(i).getBairro(),
                listaEnd.get(i).getCidade()
            });
        }
    }
    
    private String converteData(java.util.Date data){
        String dataConvertida = null;
        
        String split[] = data.toString().split("-");
         
        return dataConvertida = split[2]+"/"+split[1]+"/"+split[0];
    }
    // Método para abrir o arquivo usando o Desktop
    private void abrirArquivo(String caminhoArquivo) {
        try {
            File arquivo = new File("C:\\xampp\\htdocs\\Cobranca\\php\\uploads\\"+caminhoArquivo);
            Desktop.getDesktop().open(arquivo);
        }catch(java.lang.IllegalArgumentException erro){
            JOptionPane.showMessageDialog(null, "Arquivo não encontrado! "+erro);
        }catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    // Editor de célula personalizado para lidar com o evento de clique do botão
    class BotaoEditor extends AbstractCellEditor implements TableCellEditor {
        private JButton button;

        public BotaoEditor() {
            button = new JButton();
            button.setOpaque(true);

            // Adiciona um ActionListener ao botão
            button.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String caminhoArquivo = "teste";
                    try{
                        if(jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 4) != null){
                            if(!jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 4).toString().isBlank()){
                                caminhoArquivo = jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 4).toString();
                                abrirArquivo(caminhoArquivo);
                            }else{
                                JOptionPane.showMessageDialog(null, "Não existe comprovante para esta compra!");
                            }
                        }else{
                            JOptionPane.showMessageDialog(null, "Não existe comprovante para esta compra!");
                        }
                    }catch(java.lang.NullPointerException eNull){
                        System.out.println("erro-> "+eNull);
                    }
                }
            });
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            return button;
        }

        @Override
        public Object getCellEditorValue() {
            return null;
        }    
    }
    
    // Renderizador personalizado para exibir o botão na célula da tabela
    class BotaoRenderer extends JButton implements TableCellRenderer {
        public BotaoRenderer() {
            setOpaque(true);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText("Abrir comprovante");
            return this;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaDebitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaDebitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaDebitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaDebitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaDebitos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBPesquisar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTDebitos;
    private javax.swing.JTable jTEnderecos;
    private javax.swing.JTextField jTFCPFCNPJ2;
    private javax.swing.JTextField jTFNome2;
    private javax.swing.JTextField jTFPesquisar;
    private javax.swing.JTable jTTelefones2;
    // End of variables declaration//GEN-END:variables
}
