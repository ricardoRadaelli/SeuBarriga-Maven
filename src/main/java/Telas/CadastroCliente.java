/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Telas;

import Atributos.AcaoCobranca;
import Atributos.Clientes;
import Atributos.Comprovantes;
import Atributos.Configuracoes;
import Atributos.Debitos;
import Atributos.Devedores;
import Atributos.Enderecos;
import Atributos.Negociacao;
import Atributos.Pagamentos;
import Atributos.Telefones;
import Banco.AcaoCobrancaDAO;
import Banco.ClientesDAO;
import Banco.ComprovantesDAO;
import Banco.DebitosDAO;
import Banco.DevedoresDAO;
import Banco.EnderecosDAO;
import Banco.NegociacaoDAO;
import Banco.PagamentosDAO;
import Banco.SaldosDAO;
import Banco.TelefonesDAO;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.Document;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author User
 */
public class CadastroCliente extends javax.swing.JFrame implements PesquisaClientes.InterfaceRepassaDadosClientes, PesquisaDevedores.InterfaceRepassaDadosDevedores{

    /**
     * Creates new form CadastroDevedor
     */
    public CadastroCliente() {
        initComponents();
        habilitaCamposEndereco(false);
        habilitaCamposDevedor(false);
        habilitaCamposTel(false);
        habilitaCamposDebitos(false);
        habilitaCamposNegociacoes(false);
        habilitaCamposAcoes(false);
        habilitaCamposPagamentos(false);
        habilitaCamposCredor(false);
        try {
            dateFormatter = new MaskFormatter("##/##/####");
            cpfMask = new MaskFormatter("###.###.###-##");
            cnpjMask = new MaskFormatter("##.###.###/####-##");
            dateFormatter.setPlaceholderCharacter(' ');
            jFTFDataCompra.setColumns(10);
            jTFCPF.setColumns(20);
        } catch (ParseException ex) {
            Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    Devedores devedor;
    Clientes cliente;
    DecimalFormat decimalFormat = new DecimalFormat("#0.00");
    
    DefaultTableModel modelTel = new DefaultTableModel();
    DefaultTableModel modelEnd = new DefaultTableModel();
    DefaultTableModel modelDeb = new DefaultTableModel();
    DefaultTableModel modelPag = new DefaultTableModel();
    DefaultTableModel modelAcoes = new DefaultTableModel(); 
    DefaultTableModel modelNeg = new DefaultTableModel(); 
    DefaultTableModel modelDevedores = new DefaultTableModel();
    
    File arquivo;
    
    MaskFormatter cpfMask;
    MaskFormatter cnpjMask;
    MaskFormatter dateFormatter;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTFNome = new javax.swing.JTextField();
        jTFRazao = new javax.swing.JTextField();
        jTFCPF = new javax.swing.JFormattedTextField();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jTFCustoNaoPago = new javax.swing.JTextField();
        jTFValorEmCobranca = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTAInformacoesCliente = new javax.swing.JTextArea();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jTFResponsavel = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jTFComissao = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        jTFDiaReembolso = new javax.swing.JTextField();
        jTPTabbedPane = new javax.swing.JTabbedPane();
        jPEnd = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTEnd = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTAReferencia = new javax.swing.JTextArea();
        jTFRua = new javax.swing.JTextField();
        jTFComplemento = new javax.swing.JTextField();
        jTFCidade = new javax.swing.JTextField();
        jTFNumeroEnd = new javax.swing.JTextField();
        jTFBairro = new javax.swing.JTextField();
        jTFCep = new javax.swing.JTextField();
        jCBEstados = new javax.swing.JComboBox<>();
        jBEditar = new javax.swing.JButton();
        jBSalvar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBNovoEnd = new javax.swing.JButton();
        jPContatos = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTFTelefone = new javax.swing.JTextField();
        jTFEmail = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTAObsTelefone = new javax.swing.JTextArea();
        jBNovoTel = new javax.swing.JButton();
        jBEditarTel = new javax.swing.JButton();
        jBSalvarTel = new javax.swing.JButton();
        jBCancelarTel = new javax.swing.JButton();
        jBExcluirTel = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTTelefone = new javax.swing.JTable();
        jPCredores = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jCBAtivo = new javax.swing.JCheckBox();
        jFTFDataCadastroCredor = new javax.swing.JFormattedTextField();
        jFTFDataFinalizacaoCobranca = new javax.swing.JFormattedTextField();
        jTFNomeDevedor = new javax.swing.JTextField();
        jTFRazaoDevedor = new javax.swing.JTextField();
        jTFCPFDevedor = new javax.swing.JTextField();
        jTFTaxaJuros = new javax.swing.JTextField();
        jBNovoCredor = new javax.swing.JButton();
        jBEditarCredor = new javax.swing.JButton();
        jBSalvarCredor = new javax.swing.JButton();
        jBCancelarCredor = new javax.swing.JButton();
        jBExcluirCredor = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTDevedor = new javax.swing.JTable();
        jPDebitos = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jFTFDataCompra = new javax.swing.JFormattedTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTADescricao = new javax.swing.JTextArea();
        jTFValor = new javax.swing.JTextField();
        jBDesmarcarNegociacao = new javax.swing.JButton();
        jBAlterarComprovante = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jTFComprovanteSelecionado = new javax.swing.JTextField();
        jBNovoDeb = new javax.swing.JButton();
        jBEditarDeb = new javax.swing.JButton();
        jBSalvarDebito = new javax.swing.JButton();
        jBCancelarDebito = new javax.swing.JButton();
        jBExcluirDebito = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTDebitos = new javax.swing.JTable();
        jPNegociacoes = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jTFValorTotal = new javax.swing.JTextField();
        jTFValorPagoNeg = new javax.swing.JTextField();
        jTFSaldoDevedor = new javax.swing.JTextField();
        jTFNParcelas = new javax.swing.JTextField();
        jCBNegociacaoPaga = new javax.swing.JCheckBox();
        jFTFDataPrimeiraParcela = new javax.swing.JFormattedTextField();
        jFTFDataNegociacao = new javax.swing.JFormattedTextField();
        jCBFormaPagamento = new javax.swing.JComboBox<>();
        jBNovoNegociacao = new javax.swing.JButton();
        jBEditarNegociacao = new javax.swing.JButton();
        jBSalvarNegociacao = new javax.swing.JButton();
        jBCancelarNegociacao = new javax.swing.JButton();
        jBExcluirNegociacao = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTNegociacoes = new javax.swing.JTable();
        jPAcoesCobranca = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTFIDNegociacao = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTADescricaoAcao = new javax.swing.JTextArea();
        jFTFDataAcao = new javax.swing.JFormattedTextField();
        jCBTipoAcao = new javax.swing.JComboBox<>();
        jBNovoAcao = new javax.swing.JButton();
        jBEditarAcao = new javax.swing.JButton();
        jBSalvarAcao = new javax.swing.JButton();
        jBCancelarAcao = new javax.swing.JButton();
        jBExcluirAcao = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTAcoes = new javax.swing.JTable();
        jPPagamentos = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jTFValorParcela = new javax.swing.JTextField();
        jTFValorPagoPag = new javax.swing.JTextField();
        jTFEncargos = new javax.swing.JTextField();
        jFTFDataPagamento = new javax.swing.JFormattedTextField();
        jFTFDataVencimento = new javax.swing.JFormattedTextField();
        jCBPago = new javax.swing.JCheckBox();
        jCBFormaPagamentoPag = new javax.swing.JComboBox<>();
        jBEfetuarPagamento = new javax.swing.JButton();
        jBEditarPagamento = new javax.swing.JButton();
        jBSalvarPagamento = new javax.swing.JButton();
        jBCancelarPagamento = new javax.swing.JButton();
        jBExcluirPagamento = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTPagamentos = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTPesquisarCliente = new javax.swing.JTextField();
        jBPesquisarDevedor = new javax.swing.JButton();
        jBNovoCliente = new javax.swing.JButton();
        jBEditaCliente = new javax.swing.JButton();
        jBSalvarCliente = new javax.swing.JButton();
        jBAtiva = new javax.swing.JButton();
        jBCancelarCliente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Devedores");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do cliente"));

        jLabel1.setText("Nome:");

        jLabel2.setText("Razão Social:");

        jLabel3.setText("CPF/CNPJ:");

        jTFNome.setEnabled(false);

        jTFRazao.setEnabled(false);

        jTFCPF.setEnabled(false);
        jTFCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFCPFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFCPFFocusLost(evt);
            }
        });

        jLabel55.setText("Dia de reembolso:");

        jLabel56.setText("Valor em cobrança:");

        jLabel58.setText("R$");

        jLabel59.setText("Custo devedor não pago:");

        jLabel60.setText("R$");

        jTAInformacoesCliente.setColumns(20);
        jTAInformacoesCliente.setRows(5);
        jScrollPane12.setViewportView(jTAInformacoesCliente);

        jLabel61.setText("Informações adicionais:");

        jLabel62.setText("Responsável:");

        jLabel57.setText("Comissão");

        jLabel63.setText("%");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTFNome)
                            .addComponent(jTFRazao, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jTFCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel56)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel58))
                            .addComponent(jLabel55))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTFValorEmCobranca)
                            .addComponent(jTFDiaReembolso, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jLabel62)
                                .addGap(18, 18, 18)
                                .addComponent(jTFResponsavel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel57)
                                    .addComponent(jLabel59))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel60)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTFCustoNaoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTFComissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel63))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel61)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTFRazao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTFCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel62)
                    .addComponent(jTFResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(jLabel58)
                    .addComponent(jLabel59)
                    .addComponent(jLabel60)
                    .addComponent(jTFCustoNaoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFValorEmCobranca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTFComissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel57)
                        .addComponent(jLabel63))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel55)
                        .addComponent(jTFDiaReembolso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel61)
                        .addGap(0, 40, Short.MAX_VALUE))
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTPTabbedPane.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));

        jPEnd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jTEnd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Endereço", "CEP", "Rua", "Nº", "Bairro", "Cidade", "Estado", "Referencia", "Complemento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableColumnModel cmEnd = jTEnd.getColumnModel();

        // Escondendo a coluna de índice 1 (Coluna 2)
        cmEnd.removeColumn(cmEnd.getColumn(8));
        cmEnd.removeColumn(cmEnd.getColumn(7));
        cmEnd.removeColumn(cmEnd.getColumn(0));

        jTEnd.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    if (jTEnd.getSelectedRow() != -1) {
                        jTFCep.setText(jTEnd.getValueAt(jTEnd.getSelectedRow(), 0).toString());
                        jTFRua.setText(jTEnd.getValueAt(jTEnd.getSelectedRow(), 1).toString());
                        jTFNumeroEnd.setText(jTEnd.getValueAt(jTEnd.getSelectedRow(), 2).toString());
                        jTFBairro.setText(jTEnd.getValueAt(jTEnd.getSelectedRow(), 3).toString());
                        jTFCidade.setText(jTEnd.getValueAt(jTEnd.getSelectedRow(), 4).toString());
                        jCBEstados.setSelectedItem(jTEnd.getValueAt(jTEnd.getSelectedRow(), 5).toString());
                        jTAReferencia.setText(jTEnd.getModel().getValueAt(jTEnd.getSelectedRow(), 7).toString());
                        jTFComplemento.setText(jTEnd.getModel().getValueAt(jTEnd.getSelectedRow(), 8).toString());
                        jBEditar.setEnabled(true);
                    }
                }
            }
        });
        jScrollPane1.setViewportView(jTEnd);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204)));

        jLabel4.setText("Rua:");

        jLabel5.setText("Número:");

        jLabel6.setText("Complemento:");

        jLabel7.setText("Bairro");

        jLabel8.setText("CEP:");

        jLabel9.setText("Cidade:");

        jLabel11.setText("Estado");

        jLabel12.setText("Referência:");

        jTAReferencia.setColumns(20);
        jTAReferencia.setRows(5);
        jScrollPane2.setViewportView(jTAReferencia);

        jCBEstados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Acre", "Alagoas", "Amapá", "Amazonas", "Bahia", "Ceará", "Distrito Federal", "Espírito Santo", "Goiás", "Maranhão", "Mato Grosso", "Mato Grosso do Sul", "Minas Gerais", "Pará", "Paraíba", "Paraná", "Pernambuco", "Piauí", "Rio de Janeiro", "Rio Grande do Norte", "Rio Grande do Sul", "Rondônia", "Roraima", "Santa Catarina", "São Paulo", "Sergipe", "Tocantins" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTFComplemento)
                            .addComponent(jTFRua)
                            .addComponent(jTFCidade, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jTFNumeroEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jTFBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 135, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addComponent(jTFCep, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jCBEstados, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(jTFRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFNumeroEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jTFComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jTFCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 49, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jBEditar.setText("Editar");
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });

        jBSalvar.setText("Salvar");
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBExcluir.setText("Excluir");
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBNovoEnd.setText("Novo");
        jBNovoEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoEndActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPEndLayout = new javax.swing.GroupLayout(jPEnd);
        jPEnd.setLayout(jPEndLayout);
        jPEndLayout.setHorizontalGroup(
            jPEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPEndLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPEndLayout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addComponent(jBNovoEnd)
                .addGap(81, 81, 81)
                .addComponent(jBEditar)
                .addGap(84, 84, 84)
                .addComponent(jBSalvar)
                .addGap(81, 81, 81)
                .addComponent(jBCancelar)
                .addGap(82, 82, 82)
                .addComponent(jBExcluir)
                .addContainerGap(316, Short.MAX_VALUE))
        );
        jPEndLayout.setVerticalGroup(
            jPEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPEndLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBEditar)
                    .addComponent(jBSalvar)
                    .addComponent(jBCancelar)
                    .addComponent(jBExcluir)
                    .addComponent(jBNovoEnd))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTPTabbedPane.addTab("Endereços", jPEnd);

        jPContatos.setToolTipText("");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204)));

        jLabel20.setText("Telefone:");

        jLabel21.setText("E-Mail:");

        jLabel22.setText("Observação:");

        jTAObsTelefone.setColumns(20);
        jTAObsTelefone.setRows(5);
        jScrollPane6.setViewportView(jTAObsTelefone);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 249, Short.MAX_VALUE)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTFTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jTFEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBNovoTel.setText("Novo");
        jBNovoTel.setEnabled(false);
        jBNovoTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoTelActionPerformed(evt);
            }
        });

        jBEditarTel.setText("Editar");
        jBEditarTel.setEnabled(false);
        jBEditarTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarTelActionPerformed(evt);
            }
        });

        jBSalvarTel.setText("Salvar");
        jBSalvarTel.setEnabled(false);
        jBSalvarTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarTelActionPerformed(evt);
            }
        });

        jBCancelarTel.setText("Cancelar");
        jBCancelarTel.setEnabled(false);
        jBCancelarTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarTelActionPerformed(evt);
            }
        });

        jBExcluirTel.setText("Excluir");
        jBExcluirTel.setEnabled(false);
        jBExcluirTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirTelActionPerformed(evt);
            }
        });

        jTTelefone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Telefone", "Telefone", "E-Mail", "Observação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableColumnModel cmTel = jTTelefone.getColumnModel();

        // Escondendo a coluna de índice 1 (Coluna 2)
        cmTel.removeColumn(cmTel.getColumn(0));

        jTTelefone.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    if (jTTelefone.getSelectedRow() != -1) {
                        jTFTelefone.setText(jTTelefone.getValueAt(jTTelefone.getSelectedRow(), 0).toString());
                        jTFEmail.setText(jTTelefone.getValueAt(jTTelefone.getSelectedRow(), 1).toString());
                        jTAObsTelefone.setText(jTTelefone.getValueAt(jTTelefone.getSelectedRow(), 2).toString());
                        jBEditarTel.setEnabled(true);
                    }
                }
            }
        });
        jScrollPane5.setViewportView(jTTelefone);

        javax.swing.GroupLayout jPContatosLayout = new javax.swing.GroupLayout(jPContatos);
        jPContatos.setLayout(jPContatosLayout);
        jPContatosLayout.setHorizontalGroup(
            jPContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addContainerGap())
            .addGroup(jPContatosLayout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(jBNovoTel)
                .addGap(81, 81, 81)
                .addComponent(jBEditarTel)
                .addGap(84, 84, 84)
                .addComponent(jBSalvarTel)
                .addGap(81, 81, 81)
                .addComponent(jBCancelarTel)
                .addGap(82, 82, 82)
                .addComponent(jBExcluirTel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPContatosLayout.setVerticalGroup(
            jPContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContatosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBEditarTel)
                    .addComponent(jBSalvarTel)
                    .addComponent(jBCancelarTel)
                    .addComponent(jBExcluirTel)
                    .addComponent(jBNovoTel))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTPTabbedPane.addTab("Contatos", jPContatos);

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204)));

        jLabel48.setText("Nome do devedor:");

        jLabel49.setText("Razão Social:");

        jLabel50.setText("CPF/CNPJ:");

        jLabel51.setText("Data de finalização da cobrança:");

        jLabel52.setText("Taxa de juros:");

        jLabel53.setText("Data de cadastro devínculo:");

        jLabel54.setText("Ativo?");

        jCBAtivo.setEnabled(false);

        try {
            jFTFDataCadastroCredor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jFTFDataFinalizacaoCobranca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jTFNomeDevedor.setEditable(false);
        jTFNomeDevedor.setEnabled(false);

        jTFRazaoDevedor.setEditable(false);
        jTFRazaoDevedor.setEnabled(false);

        jTFCPFDevedor.setEditable(false);
        jTFCPFDevedor.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48)
                    .addComponent(jLabel50))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTFCPFDevedor, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel51)
                        .addGap(18, 18, 18)
                        .addComponent(jFTFDataFinalizacaoCobranca, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel53)
                        .addGap(18, 18, 18)
                        .addComponent(jFTFDataCadastroCredor, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(jLabel52)
                        .addGap(18, 18, 18)
                        .addComponent(jTFTaxaJuros, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jTFNomeDevedor, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel49)
                        .addGap(18, 18, 18)
                        .addComponent(jTFRazaoDevedor, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBAtivo)
                        .addGap(67, 67, 67))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(jLabel54)
                    .addComponent(jCBAtivo)
                    .addComponent(jTFNomeDevedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49)
                    .addComponent(jTFRazaoDevedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel52)
                        .addComponent(jTFTaxaJuros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel53)
                        .addComponent(jFTFDataCadastroCredor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel51)
                        .addComponent(jFTFDataFinalizacaoCobranca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel50)
                        .addComponent(jTFCPFDevedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jFTFDataFinalizacaoCobranca.setColumns(10);

        jBNovoCredor.setText("Novo");
        jBNovoCredor.setEnabled(false);
        jBNovoCredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoCredorActionPerformed(evt);
            }
        });

        jBEditarCredor.setText("Editar");
        jBEditarCredor.setEnabled(false);
        jBEditarCredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarCredorActionPerformed(evt);
            }
        });

        jBSalvarCredor.setText("Salvar");
        jBSalvarCredor.setEnabled(false);
        jBSalvarCredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarCredorActionPerformed(evt);
            }
        });

        jBCancelarCredor.setText("Cancelar");
        jBCancelarCredor.setEnabled(false);
        jBCancelarCredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarCredorActionPerformed(evt);
            }
        });

        jBExcluirCredor.setText("Excluir");
        jBExcluirCredor.setEnabled(false);
        jBExcluirCredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirCredorActionPerformed(evt);
            }
        });

        jTDevedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Devedor", "Nome", "Razão Social", "CPF/CNPJ", "Data finalização cobrança", "Taxa de juros", "Saldo devedor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableColumnModel cmCred = jTDevedor.getColumnModel();

        // Escondendo a coluna de índice 1 (Coluna 2)
        cmCred.removeColumn(cmCred.getColumn(0));

        jTDevedor.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                DevedoresDAO ddao = new DevedoresDAO();
                if (!e.getValueIsAdjusting()) {
                    if (jTDevedor.getSelectedRow() != -1) {
                        jTFNomeDevedor.setText(jTDevedor.getValueAt(jTDevedor.getSelectedRow(), 0).toString());
                        jTFRazaoDevedor.setText(jTDevedor.getValueAt(jTDevedor.getSelectedRow(), 1).toString());
                        jTFCPFDevedor.setText(jTDevedor.getValueAt(jTDevedor.getSelectedRow(), 2).toString());
                        jFTFDataFinalizacaoCobranca.setText(jTDevedor.getValueAt(jTDevedor.getSelectedRow(), 3).toString());
                        jTFTaxaJuros.setText(jTDevedor.getValueAt(jTDevedor.getSelectedRow(), 4).toString());

                        camposDevedor(Integer.parseInt(jTDevedor.getModel().getValueAt(jTDevedor.getSelectedRow(), 0).toString()));
                        jBEditarCredor.setEnabled(true);

                        devedorSelecionado(ddao.buscaDevedorPorIdClienteEIdDevedor(Integer.parseInt(jTDevedor.getModel().getValueAt(jTDevedor.getSelectedRow(), 0).toString()), cliente.getIdCliente()));
                        jBAtiva.setEnabled(true);
                        jBNovoDeb.setEnabled(true);
                        jBNovoNegociacao.setEnabled(true);
                        preencheTabelasVinculoDevedorCliente();
                    }else
                    jBAtiva.setEnabled(false);
                }
            }
        });
        jScrollPane11.setViewportView(jTDevedor);

        javax.swing.GroupLayout jPCredoresLayout = new javax.swing.GroupLayout(jPCredores);
        jPCredores.setLayout(jPCredoresLayout);
        jPCredoresLayout.setHorizontalGroup(
            jPCredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCredoresLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBNovoCredor)
                .addGap(81, 81, 81)
                .addComponent(jBEditarCredor)
                .addGap(84, 84, 84)
                .addComponent(jBSalvarCredor)
                .addGap(81, 81, 81)
                .addComponent(jBCancelarCredor)
                .addGap(82, 82, 82)
                .addComponent(jBExcluirCredor)
                .addGap(217, 217, 217))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCredoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane11)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPCredoresLayout.setVerticalGroup(
            jPCredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCredoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPCredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBEditarCredor)
                    .addComponent(jBSalvarCredor)
                    .addComponent(jBCancelarCredor)
                    .addComponent(jBExcluirCredor)
                    .addComponent(jBNovoCredor))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTPTabbedPane.addTab("Devedores", jPCredores);

        jPDebitos.setEnabled(false);

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204)));

        jLabel14.setText("Valor:");

        jLabel15.setText("Data da compra:");

        jLabel16.setText("Descrição da compra:");

        jLabel17.setText("R$");

        jFTFDataCompra.setColumns(10);
        try {
            jFTFDataCompra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jTADescricao.setColumns(20);
        jTADescricao.setRows(5);
        jScrollPane4.setViewportView(jTADescricao);

        jTFValor.setHorizontalAlignment(JTextField.RIGHT);
        jTFValor.setText("0.00");

        jTFValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char c = evt.getKeyChar();
                if (!((c >= '0' && c <= '9') || c == '.' || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
                    evt.consume();
                }
            }
        });
        jTFValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFValorFocusLost(evt);
            }
        });

        jBDesmarcarNegociacao.setText("Desmarcar negociação");
        jBDesmarcarNegociacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDesmarcarNegociacaoActionPerformed(evt);
            }
        });

        jBAlterarComprovante.setText("Selecionar comprovante");
        jBAlterarComprovante.setEnabled(false);
        jBAlterarComprovante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarComprovanteActionPerformed(evt);
            }
        });

        jLabel19.setText("Comprovante selecionado:");

        jTFComprovanteSelecionado.setEditable(false);
        jTFComprovanteSelecionado.setEnabled(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(418, 418, 418)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFComprovanteSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFValor, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(jFTFDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBAlterarComprovante)
                        .addGap(108, 108, 108)
                        .addComponent(jBDesmarcarNegociacao)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel17)
                    .addComponent(jFTFDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBDesmarcarNegociacao)
                    .addComponent(jBAlterarComprovante))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel19)
                    .addComponent(jTFComprovanteSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addContainerGap())
        );

        jBNovoDeb.setText("Novo");
        jBNovoDeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoDebActionPerformed(evt);
            }
        });

        jBEditarDeb.setText("Editar");
        jBEditarDeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarDebActionPerformed(evt);
            }
        });

        jBSalvarDebito.setText("Salvar");
        jBSalvarDebito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarDebitoActionPerformed(evt);
            }
        });

        jBCancelarDebito.setText("Cancelar");
        jBCancelarDebito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarDebitoActionPerformed(evt);
            }
        });

        jBExcluirDebito.setText("Excluir");
        jBExcluirDebito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirDebitoActionPerformed(evt);
            }
        });

        jTDebitos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Debito", "Cliente", "Em Negociação?", "Data Compra", "Valor", "Descrição", "Comprovante"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableColumnModel cmDeb = jTDebitos.getColumnModel();

        // Escondendo a coluna de índice 1 (Coluna 2)
        cmDeb.removeColumn(cmDeb.getColumn(0));

        jTDebitos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    if (jTDebitos.getSelectedRow() != -1) {
                        jTFValor.setText((jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 3).toString()));
                        jFTFDataCompra.setText((jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 2).toString()));
                        jTADescricao.setText(jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 4).toString());
                        jTFComprovanteSelecionado.setText(jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 5).toString());

                        jBEditarDeb.setEnabled(true);
                    }
                }
            }
        });
        jScrollPane3.setViewportView(jTDebitos);

        javax.swing.GroupLayout jPDebitosLayout = new javax.swing.GroupLayout(jPDebitos);
        jPDebitos.setLayout(jPDebitosLayout);
        jPDebitosLayout.setHorizontalGroup(
            jPDebitosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDebitosLayout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(jBNovoDeb)
                .addGap(81, 81, 81)
                .addComponent(jBEditarDeb)
                .addGap(84, 84, 84)
                .addComponent(jBSalvarDebito)
                .addGap(81, 81, 81)
                .addComponent(jBCancelarDebito)
                .addGap(82, 82, 82)
                .addComponent(jBExcluirDebito)
                .addContainerGap(306, Short.MAX_VALUE))
            .addGroup(jPDebitosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPDebitosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPDebitosLayout.setVerticalGroup(
            jPDebitosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDebitosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPDebitosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBEditarDeb)
                    .addComponent(jBSalvarDebito)
                    .addComponent(jBCancelarDebito)
                    .addComponent(jBExcluirDebito)
                    .addComponent(jBNovoDeb))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTPTabbedPane.addTab("Débitos", jPDebitos);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204)));

        jLabel27.setText("Data da Negociação:");

        jLabel28.setText("Data da primeira parcela:");

        jLabel29.setText("Forma de pagamento:");

        jLabel30.setText("Valor total:");

        jLabel31.setText("Número de parcelas:");

        jLabel32.setText("Valor pago:");

        jLabel33.setText("Saldo Devedor:");

        jLabel34.setText("Pago?");

        jLabel35.setText("R$");

        jLabel36.setText("R$");

        jLabel37.setText("R$");

        jTFValorTotal.setHorizontalAlignment(JTextField.RIGHT);
        jTFValorTotal.setText("0.00");

        jTFValorTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char c = evt.getKeyChar();
                if (!((c >= '0' && c <= '9') || c == '.' || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
                    evt.consume();
                }
            }
        });
        jTFValorTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFValorTotalFocusLost(evt);
            }
        });

        jTFValorPagoNeg.setHorizontalAlignment(JTextField.RIGHT);
        jTFValorPagoNeg.setText("0.00");

        jTFValorPagoNeg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char c = evt.getKeyChar();
                if (!((c >= '0' && c <= '9') || c == '.' || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
                    evt.consume();
                }
            }
        });
        jTFValorPagoNeg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFValorPagoNegFocusLost(evt);
            }
        });

        jTFSaldoDevedor.setHorizontalAlignment(JTextField.RIGHT);
        jTFSaldoDevedor.setText("0.00");

        jTFSaldoDevedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char c = evt.getKeyChar();
                if (!((c >= '0' && c <= '9') || c == '.' || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
                    evt.consume();
                }
            }
        });
        jTFSaldoDevedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFSaldoDevedorFocusLost(evt);
            }
        });

        jCBNegociacaoPaga.setEnabled(false);

        try {
            jFTFDataPrimeiraParcela.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jFTFDataNegociacao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jCBFormaPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Dinheiro", "Pix/Depósito", "Boleto", "Cartão de Crédito" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel35))
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCBFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTFDataNegociacao, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel36)
                        .addGap(70, 70, 70)
                        .addComponent(jTFValorPagoNeg, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFSaldoDevedor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(40, 40, 40)
                        .addComponent(jTFNParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addGap(18, 18, 18)
                        .addComponent(jFTFDataPrimeiraParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(320, 320, 320)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBNegociacaoPaga)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jFTFDataPrimeiraParcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTFDataNegociacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(jCBNegociacaoPaga))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel31)
                    .addComponent(jTFNParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel32)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(jTFValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFValorPagoNeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel37)
                    .addComponent(jTFSaldoDevedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jFTFDataNegociacao, jFTFDataPrimeiraParcela});

        jBNovoNegociacao.setText("Novo");
        jBNovoNegociacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoNegociacaoActionPerformed(evt);
            }
        });

        jBEditarNegociacao.setText("Editar");
        jBEditarNegociacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarNegociacaoActionPerformed(evt);
            }
        });

        jBSalvarNegociacao.setText("Salvar");
        jBSalvarNegociacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarNegociacaoActionPerformed(evt);
            }
        });

        jBCancelarNegociacao.setText("Cancelar");
        jBCancelarNegociacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarNegociacaoActionPerformed(evt);
            }
        });

        jBExcluirNegociacao.setText("Excluir");
        jBExcluirNegociacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirNegociacaoActionPerformed(evt);
            }
        });

        jTNegociacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Negociação", "Data negociação", "Data primeira parcela", "Valor total", "Valor pago", "Forma de pagamento", "Num Parcelas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableColumnModel cmNeg = jTNegociacoes.getColumnModel();

        // Escondendo a coluna de índice 1 (Coluna 2)
        cmNeg.removeColumn(cmNeg.getColumn(0));

        jTNegociacoes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    if (jTNegociacoes.getSelectedRow() != -1) {
                        jFTFDataNegociacao.setText(jTNegociacoes.getValueAt(jTNegociacoes.getSelectedRow(), 0).toString());
                        jFTFDataPrimeiraParcela.setText(jTNegociacoes.getValueAt(jTNegociacoes.getSelectedRow(), 1).toString());
                        jTFValorTotal.setText(jTNegociacoes.getValueAt(jTNegociacoes.getSelectedRow(), 2).toString());
                        jTFValorPagoNeg.setText(jTNegociacoes.getValueAt(jTNegociacoes.getSelectedRow(), 3).toString());
                        jCBFormaPagamento.setSelectedItem(jTNegociacoes.getValueAt(jTNegociacoes.getSelectedRow(), 4).toString());
                        jTFNParcelas.setText(jTNegociacoes.getValueAt(jTNegociacoes.getSelectedRow(), 5).toString());
                        jBEditarNegociacao.setEnabled(true);

                        NegociacaoDAO ndao = new NegociacaoDAO();
                        Negociacao neg = ndao.buscaNegociacoesPorIdNegociacao(Integer.parseInt(jTNegociacoes.getModel().getValueAt(jTNegociacoes.getSelectedRow(), 0).toString()));
                        if(neg.getPago())
                        jCBNegociacaoPaga.setSelected(true);
                        else
                        jCBNegociacaoPaga.setSelected(false);

                        jTFSaldoDevedor.setText(String.valueOf(neg.getSaldoDevedor()));
                        preencheTabelaPagamentos(Integer.parseInt(jTNegociacoes.getModel().getValueAt(jTNegociacoes.getSelectedRow(), 0).toString()));
                        debitosDaNegociacao(Integer.parseInt(jTNegociacoes.getModel().getValueAt(jTNegociacoes.getSelectedRow(), 0).toString()));
                        jBNovoAcao.setEnabled(true);
                    }
                }
            }
        });
        jScrollPane9.setViewportView(jTNegociacoes);

        javax.swing.GroupLayout jPNegociacoesLayout = new javax.swing.GroupLayout(jPNegociacoes);
        jPNegociacoes.setLayout(jPNegociacoesLayout);
        jPNegociacoesLayout.setHorizontalGroup(
            jPNegociacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPNegociacoesLayout.createSequentialGroup()
                .addContainerGap(268, Short.MAX_VALUE)
                .addComponent(jBNovoNegociacao)
                .addGap(81, 81, 81)
                .addComponent(jBEditarNegociacao)
                .addGap(84, 84, 84)
                .addComponent(jBSalvarNegociacao)
                .addGap(81, 81, 81)
                .addComponent(jBCancelarNegociacao)
                .addGap(82, 82, 82)
                .addComponent(jBExcluirNegociacao)
                .addGap(252, 252, 252))
            .addGroup(jPNegociacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPNegociacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane9))
                .addContainerGap())
        );
        jPNegociacoesLayout.setVerticalGroup(
            jPNegociacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPNegociacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPNegociacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBEditarNegociacao)
                    .addComponent(jBSalvarNegociacao)
                    .addComponent(jBCancelarNegociacao)
                    .addComponent(jBExcluirNegociacao)
                    .addComponent(jBNovoNegociacao))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTPTabbedPane.addTab("Negociações", jPNegociacoes);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204)));

        jLabel23.setText("ID da Negociação:");

        jLabel24.setText("Data da ação:");

        jLabel25.setText("Descrição da ação de cobrança:");

        jLabel26.setText("Tipo da ação:");

        jTFIDNegociacao.setEditable(false);
        jTFIDNegociacao.setEnabled(false);

        jTADescricaoAcao.setColumns(20);
        jTADescricaoAcao.setRows(5);
        jScrollPane8.setViewportView(jTADescricaoAcao);

        try {
            jFTFDataAcao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jCBTipoAcao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Telefonema", "Mensagem", "Carta Registrada", "E-mail" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFIDNegociacao, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFTFDataAcao, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(294, 294, 294)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBTipoAcao, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel26)
                    .addComponent(jLabel24)
                    .addComponent(jTFIDNegociacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTFDataAcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBTipoAcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );

        jBNovoAcao.setText("Novo");
        jBNovoAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoAcaoActionPerformed(evt);
            }
        });

        jBEditarAcao.setText("Editar");
        jBEditarAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarAcaoActionPerformed(evt);
            }
        });

        jBSalvarAcao.setText("Salvar");
        jBSalvarAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarAcaoActionPerformed(evt);
            }
        });

        jBCancelarAcao.setText("Cancelar");
        jBCancelarAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarAcaoActionPerformed(evt);
            }
        });

        jBExcluirAcao.setText("Excluir");
        jBExcluirAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirAcaoActionPerformed(evt);
            }
        });

        jTAcoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Ação", "Tipo da ação", "Data da ação", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableColumnModel cmAcao = jTAcoes.getColumnModel();

        // Escondendo a coluna de índice 1 (Coluna 2)
        cmAcao.removeColumn(cmAcao.getColumn(0));

        jTAcoes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    if (jTAcoes.getSelectedRow() != -1) {
                        jTFIDNegociacao.setText(jTAcoes.getModel().getValueAt(jTAcoes.getSelectedRow(), 1).toString());
                        jFTFDataAcao.setText(jTAcoes.getValueAt(jTAcoes.getSelectedRow(), 1).toString());
                        jCBTipoAcao.setSelectedItem(jTAcoes.getValueAt(jTAcoes.getSelectedRow(), 0).toString());
                        jTADescricaoAcao.setText(jTAcoes.getValueAt(jTAcoes.getSelectedRow(), 2).toString());
                        jBEditarAcao.setEnabled(true);
                    }
                }
            }
        });
        jScrollPane7.setViewportView(jTAcoes);

        javax.swing.GroupLayout jPAcoesCobrancaLayout = new javax.swing.GroupLayout(jPAcoesCobranca);
        jPAcoesCobranca.setLayout(jPAcoesCobrancaLayout);
        jPAcoesCobrancaLayout.setHorizontalGroup(
            jPAcoesCobrancaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPAcoesCobrancaLayout.createSequentialGroup()
                .addGroup(jPAcoesCobrancaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPAcoesCobrancaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPAcoesCobrancaLayout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jBNovoAcao)
                        .addGap(81, 81, 81)
                        .addComponent(jBEditarAcao)
                        .addGap(84, 84, 84)
                        .addComponent(jBSalvarAcao)
                        .addGap(81, 81, 81)
                        .addComponent(jBCancelarAcao)
                        .addGap(82, 82, 82)
                        .addComponent(jBExcluirAcao)
                        .addGap(0, 290, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPAcoesCobrancaLayout.setVerticalGroup(
            jPAcoesCobrancaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAcoesCobrancaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPAcoesCobrancaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBEditarAcao)
                    .addComponent(jBSalvarAcao)
                    .addComponent(jBCancelarAcao)
                    .addComponent(jBExcluirAcao)
                    .addComponent(jBNovoAcao))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTPTabbedPane.addTab("Ações de Cobrança", jPAcoesCobranca);

        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204)));

        jLabel38.setText("Data de pagamento:");

        jLabel39.setText("Forma de pagamento:");

        jLabel40.setText("Valor da parcela:");

        jLabel41.setText("Valor pago:");

        jLabel42.setText("Encargos:");

        jLabel43.setText("Data de vencimento:");

        jLabel44.setText("Pago?");

        jLabel45.setText("R$");

        jLabel46.setText("R$");

        jLabel47.setText("R$");

        jTFValorParcela.setHorizontalAlignment(JTextField.RIGHT);
        jTFValorParcela.setText("0.00");

        jTFValorParcela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char c = evt.getKeyChar();
                if (!((c >= '0' && c <= '9') || c == '.' || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
                    evt.consume();
                }
            }
        });
        jTFValorParcela.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFValorParcelaFocusLost(evt);
            }
        });

        jTFValorPagoPag.setHorizontalAlignment(JTextField.RIGHT);
        jTFValorPagoPag.setText("0.00");

        jTFValorPagoPag.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char c = evt.getKeyChar();
                if (!((c >= '0' && c <= '9') || c == '.' || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
                    evt.consume();
                }
            }
        });
        jTFValorPagoPag.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFValorPagoPagFocusLost(evt);
            }
        });

        jTFEncargos.setHorizontalAlignment(JTextField.RIGHT);
        jTFEncargos.setText("0.00");

        jTFEncargos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char c = evt.getKeyChar();
                if (!((c >= '0' && c <= '9') || c == '.' || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
                    evt.consume();
                }
            }
        });
        jTFEncargos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFEncargosFocusLost(evt);
            }
        });

        try {
            jFTFDataPagamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jFTFDataVencimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTFDataVencimento.setToolTipText("");

        jCBPago.setEnabled(false);

        jCBFormaPagamentoPag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Dinheiro", "Pix/Transferência", "Boleto", "Cartão de crédito" }));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel39)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel45)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFValorParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBFormaPagamentoPag, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFTFDataPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addGap(328, 328, 328)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel43)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel41)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel46)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jTFValorPagoPag, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel42)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel47)
                                .addGap(18, 18, 18)
                                .addComponent(jTFEncargos, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jFTFDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel44)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBPago)))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel44)
                    .addComponent(jLabel43)
                    .addComponent(jFTFDataPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTFDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBPago))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jCBFormaPagamentoPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(jLabel41)
                    .addComponent(jLabel42)
                    .addComponent(jLabel45)
                    .addComponent(jLabel46)
                    .addComponent(jLabel47)
                    .addComponent(jTFValorParcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFValorPagoPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFEncargos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jFTFDataPagamento, jFTFDataVencimento});

        jBEfetuarPagamento.setText("Efetuar Pagamento");
        jBEfetuarPagamento.setEnabled(false);
        jBEfetuarPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEfetuarPagamentoActionPerformed(evt);
            }
        });

        jBEditarPagamento.setText("Editar");
        jBEditarPagamento.setEnabled(false);
        jBEditarPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarPagamentoActionPerformed(evt);
            }
        });

        jBSalvarPagamento.setText("Salvar");
        jBSalvarPagamento.setEnabled(false);
        jBSalvarPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarPagamentoActionPerformed(evt);
            }
        });

        jBCancelarPagamento.setText("Cancelar");
        jBCancelarPagamento.setEnabled(false);
        jBCancelarPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarPagamentoActionPerformed(evt);
            }
        });

        jBExcluirPagamento.setText("Cancelar Pagamento");
        jBExcluirPagamento.setEnabled(false);
        jBExcluirPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirPagamentoActionPerformed(evt);
            }
        });

        jTPagamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Pagamento", "ID Negociação", "Data pagamento", "Data vencimento", "Forma pagamento", "Valor parcela", "Valor pago"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableColumnModel cmPag = jTPagamentos.getColumnModel();

        // Escondendo a coluna de índice 1 (Coluna 2)
        cmPag.removeColumn(cmPag.getColumn(1));
        cmPag.removeColumn(cmPag.getColumn(0));

        jTPagamentos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    if (jTPagamentos.getSelectedRow() != -1) {
                        jFTFDataPagamento.setText(jTPagamentos.getValueAt(jTPagamentos.getSelectedRow(), 0).toString());
                        jFTFDataVencimento.setText(jTPagamentos.getValueAt(jTPagamentos.getSelectedRow(), 1).toString());
                        jCBFormaPagamentoPag.setSelectedItem(jTPagamentos.getValueAt(jTPagamentos.getSelectedRow(), 2).toString());
                        jTFValorParcela.setText(jTPagamentos.getValueAt(jTPagamentos.getSelectedRow(), 3).toString());
                        jTFValorPagoPag.setText(jTPagamentos.getValueAt(jTPagamentos.getSelectedRow(), 4).toString());

                        jBEditarPagamento.setEnabled(true);

                        PagamentosDAO pdao = new PagamentosDAO();
                        Pagamentos pag = pdao.getPagamento(Integer.parseInt(jTPagamentos.getModel().getValueAt(jTPagamentos.getSelectedRow(), 0).toString()));
                        if(pag.getPago())
                        jCBPago.setSelected(true);
                        else
                        jCBPago.setSelected(false);

                        jTFEncargos.setText(String.valueOf(pdao.getEncargos(Integer.parseInt(jTPagamentos.getModel().getValueAt(jTPagamentos.getSelectedRow(), 0).toString()))));

                        jBEditarPagamento.setEnabled(true);
                    }
                }
            }
        });
        jScrollPane10.setViewportView(jTPagamentos);

        javax.swing.GroupLayout jPPagamentosLayout = new javax.swing.GroupLayout(jPPagamentos);
        jPPagamentos.setLayout(jPPagamentosLayout);
        jPPagamentosLayout.setHorizontalGroup(
            jPPagamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPagamentosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPPagamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane10))
                .addContainerGap())
            .addGroup(jPPagamentosLayout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jBEfetuarPagamento)
                .addGap(81, 81, 81)
                .addComponent(jBEditarPagamento)
                .addGap(84, 84, 84)
                .addComponent(jBSalvarPagamento)
                .addGap(81, 81, 81)
                .addComponent(jBCancelarPagamento)
                .addGap(82, 82, 82)
                .addComponent(jBExcluirPagamento)
                .addContainerGap(237, Short.MAX_VALUE))
        );
        jPPagamentosLayout.setVerticalGroup(
            jPPagamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPagamentosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPPagamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBEditarPagamento)
                    .addComponent(jBSalvarPagamento)
                    .addComponent(jBCancelarPagamento)
                    .addComponent(jBExcluirPagamento)
                    .addComponent(jBEfetuarPagamento))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTPTabbedPane.addTab("Pagamentos", jPPagamentos);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Controle"));

        jLabel13.setText("Pesquisar cliente:");

        jBPesquisarDevedor.setText("Pesquisar");
        jBPesquisarDevedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarDevedorActionPerformed(evt);
            }
        });

        jBNovoCliente.setText("Novo Cliente");
        jBNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoClienteActionPerformed(evt);
            }
        });

        jBEditaCliente.setText("Editar Cliente");
        jBEditaCliente.setEnabled(false);
        jBEditaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditaClienteActionPerformed(evt);
            }
        });

        jBSalvarCliente.setText("Salvar Cliente");
        jBSalvarCliente.setEnabled(false);
        jBSalvarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarClienteActionPerformed(evt);
            }
        });

        jBAtiva.setText("Ativar Devedor-Cliente");
        jBAtiva.setEnabled(false);
        jBAtiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAtivaActionPerformed(evt);
            }
        });

        jBCancelarCliente.setText("Cancelar");
        jBCancelarCliente.setEnabled(false);
        jBCancelarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jTPesquisarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBPesquisarDevedor))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jBNovoCliente)
                        .addGap(45, 45, 45)
                        .addComponent(jBEditaCliente)
                        .addGap(38, 38, 38)
                        .addComponent(jBSalvarCliente)
                        .addGap(42, 42, 42)
                        .addComponent(jBCancelarCliente))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(jBAtiva)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTPesquisarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisarDevedor))
                .addGap(32, 32, 32)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBNovoCliente)
                    .addComponent(jBEditaCliente)
                    .addComponent(jBSalvarCliente)
                    .addComponent(jBCancelarCliente))
                .addGap(18, 18, 18)
                .addComponent(jBAtiva)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTPTabbedPane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jTPTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void habilitaCamposCredor(Boolean acao){
        jFTFDataCadastroCredor.setEnabled(acao);
        jFTFDataFinalizacaoCobranca.setEnabled(acao);
        jTFTaxaJuros.setEnabled(acao);
    }
    
    private void habilitaCamposEndereco(Boolean acao){
        jTFBairro.setEnabled(acao);
        jTFCep.setEnabled(acao);
        jTFCidade.setEnabled(acao);
        jTFComplemento.setEnabled(acao);
        jTFNumeroEnd.setEnabled(acao);
        jTFRua.setEnabled(acao);
        jTAReferencia.setEnabled(acao);
        jCBEstados.setEnabled(acao);
        jBSalvar.setEnabled(acao);
        jBCancelar.setEnabled(acao);
        jBEditar.setEnabled(acao);
        jBExcluir.setEnabled(acao);
        jBNovoEnd.setEnabled(acao);
    }
    
    private void habilitaCamposTel(Boolean acao){
        jTAObsTelefone.setEnabled(acao);
        jTFTelefone.setEnabled(acao);
        jTFEmail.setEnabled(acao);
    }

    private void habilitaCamposDebitos(Boolean acao){
        jTFValor.setEnabled(acao);
        jFTFDataCompra.setEnabled(acao);
        jTADescricao.setEnabled(acao);
        jBSalvarDebito.setEnabled(acao);
        jBCancelarDebito.setEnabled(acao);
    }
    
    private void habilitaCamposNegociacoes(Boolean acao){
        jFTFDataNegociacao.setEnabled(acao);
        jFTFDataPrimeiraParcela.setEnabled(acao);
        jCBFormaPagamento.setEnabled(acao);
        jTFNParcelas.setEnabled(acao);
        jTFValorTotal.setEnabled(acao);
        jTFValorPagoNeg.setEnabled(acao);
        jTFSaldoDevedor.setEnabled(acao);
        jBNovoNegociacao.setEnabled(acao);
        jBSalvarNegociacao.setEnabled(acao);
        jBExcluirNegociacao.setEnabled(acao);
        jBCancelarNegociacao.setEnabled(acao);
        jBEditarNegociacao.setEnabled(acao);        
    }
    
    private void habilitaCamposAcoes(Boolean acao){
        jFTFDataAcao.setEnabled(acao);
        jCBTipoAcao.setEnabled(acao);
        jTADescricaoAcao.setEnabled(acao);
        jBSalvarAcao.setEnabled(acao);
        jBCancelarAcao.setEnabled(acao);
    }
    
    private void habilitaCamposPagamentos(Boolean acao){
        jFTFDataPagamento.setEnabled(acao);
        jFTFDataVencimento.setEnabled(acao);
        jCBFormaPagamentoPag.setEnabled(acao);
        jTFValorPagoPag.setEnabled(acao);
        jTFValorParcela.setEnabled(acao);
        jTFEncargos.setEnabled(acao);
    }
    
    private void habilitaCamposDevedor(Boolean acao){
        jTFNome.setEnabled(acao);
        jTFRazao.setEnabled(acao);
        jTFCPF.setEnabled(acao);
        jBEditaCliente.setEnabled(acao);
        jBSalvarCliente.setEnabled(acao);
        jBCancelarCliente.setEnabled(acao);
        jBAtiva.setEnabled(acao);
    } 
    
    private void habilitaTudo(Boolean acao){
        habilitaCamposDevedor(acao);
        habilitaCamposEndereco(acao);
        habilitaCamposTel(acao);
        habilitaCamposDebitos(acao);
        habilitaCamposNegociacoes(acao);
        habilitaCamposAcoes(acao);
        habilitaCamposPagamentos(acao);
        habilitaCamposCredor(acao);
    }
    
    private void limpaCamposDevedor(){
        jTFNome.setText("");
        jTFRazao.setText("");
        jTFCPF.setText("");
    }
    
    private void limpaCamposCredor(){
        jTFNomeDevedor.setText("");
        jTFRazaoDevedor.setText("");
        jTFCPFDevedor.setText("");
        jFTFDataCadastroCredor.setText("");
        jFTFDataFinalizacaoCobranca.setText("");
        jTFTaxaJuros.setText("");
        jCBAtivo.setSelected(false);
        jTDevedor.clearSelection();
        jBAtiva.setEnabled(false);
    }
    
    private void limpaCamposEndereco(){
        jTFBairro.setText("");
        jTFCep.setText("");
        jTFCidade.setText("");
        jTFComplemento.setText("");
        jTFNumeroEnd.setText("");
        jTFRua.setText("");
        jTAReferencia.setText("");
        jCBEstados.setSelectedIndex(0);
    }
    
    private void limpaCamposContato(){
        jTFTelefone.setText("");
        jTFEmail.setText("");
        jTAObsTelefone.setText("");
        jTTelefone.clearSelection();
    }
    
    private void limpaCamposDebitos(){
        jTFValor.setText("");
        jFTFDataCompra.setText("");
        jTADescricao.setText("");
    }
    
    private void limpaCamposNegociacoes(){
        jFTFDataNegociacao.setText("");
        jFTFDataPrimeiraParcela.setText("");
        jCBPago.setSelected(false);
        jCBFormaPagamento.setSelectedIndex(0);
        jTFNParcelas.setText("");
        jTFValorPagoNeg.setText("");
        jTFValor.setText("");
        jTFSaldoDevedor.setText("");
    }
    
    private void limpaCamposAcoes(){
        jTFIDNegociacao.setText("");
        jFTFDataAcao.setText("");
        jCBTipoAcao.setSelectedIndex(0);
        jTADescricaoAcao.setText("");
    }
    
    private void limpaCamposPagamentos(){
        jFTFDataPagamento.setText("");
        jFTFDataVencimento.setText("");
        jCBNegociacaoPaga.setSelected(false);
        jCBFormaPagamentoPag.setSelectedIndex(0);
        jTFValorPagoPag.setText("");
        jTFValorParcela.setText("");
        jTFEncargos.setText("");
    }
   
    private void limpaTabbedPane(){
        limpaCamposEndereco();
        limpaCamposContato();
        limpaCamposDebitos();
        limpaCamposNegociacoes();
        limpaCamposAcoes();
        limpaCamposPagamentos();
    }
    
    private void limpaTudo(){
        limpaCamposDevedor();
        limpaCamposEndereco();
        limpaCamposContato();
        limpaCamposDebitos();
        limpaCamposNegociacoes();
        limpaCamposAcoes();
        limpaCamposPagamentos();
        limpaCamposCredor();
        modelAcoes.setRowCount(0);
        modelDevedores.setRowCount(0);
        modelDeb.setRowCount(0);
        modelEnd.setRowCount(0);
        modelNeg.setRowCount(0);
        modelPag.setRowCount(0);
        modelTel.setRowCount(0);
    }
    
    private boolean validaDevedor(){
        if(jTFNome.getText().isEmpty() || jTFCPF.getText().replace(".", "").replace("/", "").replace("-", "").isEmpty() || jTFRazao.getText().isEmpty())
            return false;
        else 
            return true;
    }
    private boolean validaCredor(){
        if(jTFNomeDevedor.getText().isEmpty() || jTFCPFDevedor.getText().replace("/", "").replace("-", "").replace(".","").isEmpty() || 
                jTFRazaoDevedor.getText().isEmpty() || jFTFDataFinalizacaoCobranca.getText().replace("/", "").isEmpty() ||
                jFTFDataCadastroCredor.getText().replace("/", "").isEmpty() || jTFTaxaJuros.getText().isEmpty()){
            return false;
        }else {
            return true;
        }
    }
    private boolean validaEndereco(){
        if(jTFRua.getText().isEmpty() || jTFNumeroEnd.getText().isEmpty() || jTFCep.getText().isEmpty() || jTFBairro.getText().isEmpty() || 
                jTFCidade.getText().isEmpty() || jCBEstados.getSelectedIndex()==0){
            return false;
        }else {
            return true;
        }
    }
    private boolean validaTelefone(){
        if(jTFTelefone.getText().isEmpty() || jTFEmail.getText().isEmpty()){
            return false;
        }else {
            return true;
        }
    }
    private boolean validaDebitos(){
        if(jTFValor.getText().isEmpty() || jFTFDataCompra.getText().replace("/", "").isEmpty() || jTADescricao.getText().isEmpty()){
            return false;
        }else {
            return true;
        }
    }
    private boolean validaNegociacoes(){
        if(jFTFDataNegociacao.getText().replace("/", "").isEmpty() || jFTFDataPrimeiraParcela.getText().replace("/", "").isEmpty() || jCBFormaPagamento.getSelectedIndex()==0 || 
                jTFNParcelas.getText().isEmpty() || jTFValorPagoNeg.getText().isEmpty() || jTFValorTotal.getText().isEmpty() || jTFSaldoDevedor.getText().isEmpty()){
            return false;
        }else {
            return true;
        }
    }
    private boolean validaAcoes(){
        if(jFTFDataAcao.getText().replace("/", "").isEmpty() || jCBTipoAcao.getSelectedIndex()==0 || jTADescricaoAcao.getText().isEmpty()){
            return false;
        }else {
            return true;
        }
    }
    private boolean validaPagamentos(){
        if(jFTFDataPagamento.getText().replace("/", "").isEmpty() || jFTFDataVencimento.getText().replace("/", "").isEmpty() || jCBFormaPagamentoPag.getSelectedIndex()==0 || 
                jTFValorPagoPag.getText().isEmpty() || jTFValorParcela.getText().isEmpty() || jTFEncargos.getText().isEmpty()){
            return false;
        }else {
            return true;
        }
    }
    
    
    private String converteDataParaApresentacao(LocalDate data){
        LocalDate dataBase = LocalDate.of(1990,01,01);
        if(data.isBefore(dataBase)){
            return "";
        }else{
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            String formattedDate = data.format(formatter);

            return formattedDate;
        }
    }
    
    private LocalDate converteDataParaBanco(String data){
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate localDate = LocalDate.parse(data, formatter);

        return localDate;
    }
    
    private void jBPesquisarDevedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarDevedorActionPerformed
        limpaTudo();
        habilitaTudo(false);

        PesquisaClientes pesqcli = new PesquisaClientes(jTPesquisarCliente.getText());
        pesqcli.setListenerClientes(this);
        pesqcli.setVisible(true);
        
        jBNovoCredor.setEnabled(true);
        jBEditaCliente.setEnabled(true);
    }//GEN-LAST:event_jBPesquisarDevedorActionPerformed

    private void jBNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoClienteActionPerformed
        limpaTudo();
        habilitaTudo(false);
        
        jTFCPFDevedor.setEnabled(true);
        jFTFDataCadastroCredor.setEnabled(true);
        jFTFDataCadastroCredor.setText(converteDataParaApresentacao(LocalDate.now()));
        jFTFDataFinalizacaoCobranca.setEnabled(true);
        jTFTaxaJuros.setEnabled(true);
        
        habilitaCamposDevedor(true);
        jBEditaCliente.setEnabled(false);
        jBAtiva.setEnabled(false);
        jBNovoCliente.setEnabled(false);
        jBEditarCredor.setEnabled(false);
        jBCancelarCliente.setEnabled(true);
        jBExcluirCredor.setEnabled(false);
        
    }//GEN-LAST:event_jBNovoClienteActionPerformed

    private void jBSalvarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarClienteActionPerformed
        if(validaDevedor()){
            Devedores dev = new Devedores();
            dev.setCpfcnpj(jTFCPF.getText());
            dev.setNomeDevedor(jTFNome.getText());
            dev.setRazao(jTFRazao.getText());
            
            DevedoresDAO ddao = new DevedoresDAO();
            if(jBSalvarCliente.getText().equals("Salvar Devedor")){
                if(validaCredor()){
                    dev.setDataCadastro(converteDataParaBanco(jFTFDataCadastroCredor.getText()));
                    dev.setDataFinalizacaoCobranca(converteDataParaBanco(jFTFDataFinalizacaoCobranca.getText()));
                    dev.setTaxaJuros(Double.parseDouble(jTFTaxaJuros.getText()));
                    dev.setSaldoDevedor(0);
                    dev.setIdCliente(cliente.getIdCliente());
                    dev.setAtivado(false);

                    ddao.insereDevedor(dev);
                }else{
                    JOptionPane.showMessageDialog(null, "Problemas nos dados da relação credor-cliente, por favor verifique!");
                }
            }else if(jBSalvarCliente.getText().equals("Gravar Devedor")){
                
                dev.setIdDevedor(devedor.getIdDevedor());    
                ddao.atualizaDevedor(dev);
                    
                jBSalvarCliente.setText("Salvar Devedor");
                jBSalvarCliente.setEnabled(false);
                jBCancelarCliente.setEnabled(false);
                modelDevedores.setRowCount(0);
            }
                limpaCamposDevedor();
                limpaCamposCredor();
                jBNovoCliente.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(null, "Problemas nos dados do devedor, por favor verifique!");
        }
    }//GEN-LAST:event_jBSalvarClienteActionPerformed

    private void jBCancelarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarClienteActionPerformed
        limpaCamposDevedor();
        habilitaCamposDevedor(false);
        jBNovoCliente.setEnabled(true);
        modelDevedores.setRowCount(0);
    }//GEN-LAST:event_jBCancelarClienteActionPerformed

    private void jBExcluirDebitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirDebitoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBExcluirDebitoActionPerformed

    private void jBCancelarDebitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarDebitoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBCancelarDebitoActionPerformed

    private void jBSalvarDebitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarDebitoActionPerformed
        Debitos d = new Debitos();
        DebitosDAO ddao = new DebitosDAO();
        
        if(validaDebitos()){
            d.setValor(Double.parseDouble(jTFValor.getText().replace(",", ".")));
            d.setDataCompra(converteDataParaBanco(jFTFDataCompra.getText()));
            d.setDescricao(jTADescricao.getText());
            d.setIdCliente(cliente.getIdCliente());
            d.setIdDevedor(devedor.getIdDevedor());
            
            
            if(jTDebitos.getSelectedRow() != -1){
                //atualizar
                d.setIdCompra(Integer.parseInt(jTDebitos.getModel().getValueAt(jTDebitos.getSelectedRow(), 0).toString()));
                
                Comprovantes comprovante = new Comprovantes();
                ComprovantesDAO cdao = new ComprovantesDAO();
                comprovante.setArquivo(arquivo.getName());
                comprovante.setDataInclusao(LocalDate.now());
                comprovante.setIdCliente(cliente.getIdCliente());
                comprovante.setIdDevedor(devedor.getIdDevedor());
                comprovante.setIdCompra(d.getIdCompra());
                comprovante.setIdComprovante(cdao.getIdComprovante(jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 5).toString()));
                
                // Lógica para salvar o arquivo no servidor
                File serverDirectory = new File("C:\\xampp\\htdocs\\Cobranca\\php\\uploads\\");
                File destinationFile = new File(serverDirectory, arquivo.getName());

                try {
                    Files.copy(arquivo.toPath(), destinationFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                    System.out.println("Arquivo salvo com sucesso no servidor.");
                } catch (IOException ex) {
                    System.out.println("Erro ao salvar o arquivo no servidor: " + ex.getMessage());
                }
                String comprovanteAntigo = jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 5).toString();
                
                if(!jTFComprovanteSelecionado.equals(jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 5).toString())){
                    int resposta = JOptionPane.showOptionDialog(null, "O comprovante antigo será excluido, deseja prosseguir?","Atenção!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null, null, null);
                    if (resposta == JOptionPane.YES_OPTION) {
                        
                        ddao.atualizaDebitos(d, comprovante, comprovanteAntigo);
                    }else{
                        JOptionPane.showMessageDialog(null, "Alteração de debito cancelada!");
                    }
                }
                
                jBCancelarDebito.setEnabled(false);
                jBSalvarDebito.setEnabled(false);
                jBAlterarComprovante.setEnabled(false);
                jBNovoDeb.setEnabled(true);
                
                preencheTabelaDebitos(ddao.buscaDebitos(devedor.getIdDevedor()));
            }else{
                //novo
                
            }
        }else
            JOptionPane.showMessageDialog(null, "Problemas nos dados de endereço, por favor verifique!");
    }//GEN-LAST:event_jBSalvarDebitoActionPerformed

    private void jBEditarDebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarDebActionPerformed
        habilitaCamposDebitos(true);
        
        jBNovoDeb.setEnabled(false);
        jBEditarDeb.setEnabled(false);
        jBExcluirDebito.setEnabled(false);
        jBAlterarComprovante.setEnabled(true);
    }//GEN-LAST:event_jBEditarDebActionPerformed

    private void jBNovoDebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoDebActionPerformed
        CadastroDebitos cadDeb = new CadastroDebitos(devedor, cliente);
        cadDeb.setVisible(true);
    }//GEN-LAST:event_jBNovoDebActionPerformed

    private void jBNovoEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoEndActionPerformed
        jTEnd.clearSelection();
        limpaCamposEndereco();
        habilitaCamposEndereco(true);
        jTEnd.setEnabled(false);
        jBEditar.setEnabled(false);
        jBExcluir.setEnabled(false);
    }//GEN-LAST:event_jBNovoEndActionPerformed

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        EnderecosDAO edao = new EnderecosDAO();
        edao.excluir(Integer.parseInt(jTEnd.getModel().getValueAt(jTEnd.getSelectedRow(), 0).toString()));
        limpaCamposEndereco();
        habilitaCamposEndereco(false);
    }//GEN-LAST:event_jBExcluirActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        limpaCamposEndereco();
        habilitaCamposEndereco(false);
        jTEnd.clearSelection();
        jBNovoEnd.setEnabled(true);
        jTEnd.setEnabled(true);
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
        EnderecosDAO edao = new EnderecosDAO();
        Enderecos end = new Enderecos();
        
        if(validaEndereco()){
            end.setRua(jTFRua.getText());
            end.setNumero(jTFNumeroEnd.getText());
            end.setBairro(jTFBairro.getText());
            end.setCep(jTFCep.getText());
            end.setCidade(jTFCidade.getText());
            end.setComplemento(jTFComplemento.getText());
            end.setEstado(jCBEstados.getSelectedItem().toString());
            end.setReferencia(jTAReferencia.getText());
            end.setIdCliente(cliente.getIdCliente());
            end.setDataInclusao(LocalDate.now());
            end.setDataUltimoContato(LocalDate.now());

            if(jTTelefone.getSelectedRow() != -1){
                end.setId(Integer.parseInt(jTTelefone.getModel().getValueAt(jTTelefone.getSelectedRow(), 0).toString()));
                edao.atualizaEndDevedor(end);
            }else{
                edao.insereEndDevedor(end);
            }
            limpaCamposEndereco();
            habilitaCamposEndereco(false);
            modelEnd.setRowCount(0);
        }else
            JOptionPane.showMessageDialog(null, "Problemas nos dados de endereço, por favor verifique!");
    }//GEN-LAST:event_jBSalvarActionPerformed

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed
        habilitaCamposEndereco(true);
        jBNovoEnd.setEnabled(false);
    }//GEN-LAST:event_jBEditarActionPerformed

    private void jBNovoTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoTelActionPerformed
        limpaCamposContato();
        habilitaCamposTel(true);
        jBNovoTel.setEnabled(false);
        jBEditarTel.setEnabled(false);
        jBExcluirTel.setEnabled(false);
        jBSalvarTel.setEnabled(true);
        jBCancelarTel.setEnabled(true);
        jTTelefone.clearSelection();
    }//GEN-LAST:event_jBNovoTelActionPerformed

    private void jBEditarTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarTelActionPerformed
        if(jTTelefone.getSelectedRow()!= -1){
            habilitaCamposTel(true);
            jBNovoTel.setEnabled(false);
            jBEditarTel.setEnabled(false);
            jBExcluirTel.setEnabled(false);
            jBSalvarTel.setEnabled(true);
            jBCancelarTel.setEnabled(true);
        }else
            JOptionPane.showMessageDialog(null, "Selecione um cadastro para editar!");
    }//GEN-LAST:event_jBEditarTelActionPerformed

    private void jBSalvarTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarTelActionPerformed
        TelefonesDAO tdao = new TelefonesDAO();
        Telefones t = new Telefones();
        
        if(validaTelefone()){
            t.setIdCliente(cliente.getIdCliente());

            t.setEmail(jTFEmail.getText());
            t.setObs(jTAObsTelefone.getText());
            t.setTelefone(jTFTelefone.getText());

            if(jTTelefone.getSelectedRow() != -1){
                t.setIdTelefone(Integer.parseInt(jTTelefone.getModel().getValueAt(jTTelefone.getSelectedRow(), 0).toString()));

                tdao.atualizaTelefoneDevedor(t);
            }else{
                t.setDataInclusao(LocalDate.now());
                t.setDataUltimoContato(LocalDate.now());
                tdao.insereTelDevedor(t);
            }

            limpaCamposContato();
            habilitaCamposTel(false);
            preencheTabelaTel(tdao.buscaTelefoneDevedor(t.getIdDevedor()));
            jBSalvarTel.setEnabled(false);
            jBCancelarTel.setEnabled(false);
        }else
            JOptionPane.showMessageDialog(null, "Problemas nos dados de endereço, por favor verifique!");
    }//GEN-LAST:event_jBSalvarTelActionPerformed

    private void jBCancelarTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarTelActionPerformed
        limpaCamposContato();
        habilitaCamposTel(false);
        jBNovoTel.setEnabled(true);
        jBEditarTel.setEnabled(true);
        jBExcluirTel.setEnabled(true);
        jBSalvarTel.setEnabled(false);
        jBCancelarTel.setEnabled(false);
        jTTelefone.clearSelection();
    }//GEN-LAST:event_jBCancelarTelActionPerformed

    private void jBExcluirTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirTelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBExcluirTelActionPerformed

    private void jBNovoAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoAcaoActionPerformed
        limpaCamposAcoes();
        habilitaCamposAcoes(true);
        jTAcoes.clearSelection();
        jBNovoAcao.setEnabled(false);
        jBEditarAcao.setEnabled(false);
        jBExcluirAcao.setEnabled(false);
    }//GEN-LAST:event_jBNovoAcaoActionPerformed

    private void jBEditarAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarAcaoActionPerformed
        habilitaCamposAcoes(true);
        
        jBNovoAcao.setEnabled(false);
        jBSalvarAcao.setEnabled(true);
        jBCancelarAcao.setEnabled(true);
        jBExcluirAcao.setEnabled(false);
    }//GEN-LAST:event_jBEditarAcaoActionPerformed

    private void jBSalvarAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarAcaoActionPerformed
        if(jCBTipoAcao.getSelectedIndex() != 0){
            AcaoCobranca acao = new AcaoCobranca();
            acao.setDataCobranca(converteDataParaBanco(jFTFDataAcao.getText()));
            acao.setTextoCobranca(jTADescricaoAcao.getText());
            acao.setTipoCobranca(jCBTipoAcao.getSelectedItem().toString());
            acao.setIdCliente(cliente.getIdCliente());
            acao.setIdDevedor(devedor.getIdDevedor());
            acao.setIdUsuario(0);
            
            AcaoCobrancaDAO adao = new AcaoCobrancaDAO();
                
            if(jTAcoes.getSelectedRow() != -1){
                //atualiza
                acao.setIdAcao(Integer.parseInt(jTAcoes.getModel().getValueAt(jTAcoes.getSelectedRow(), 0).toString()));
                adao.atualizaAcao(acao);
            }else{
                //nova acao
                adao.insereAcao(acao);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione o tipo da ação!");
        }
        
        limpaCamposAcoes();
        habilitaCamposAcoes(false);
        jBNovoAcao.setEnabled(true);
        jBEditarAcao.setEnabled(true);
        jBSalvarAcao.setEnabled(false);
        jBCancelarAcao.setEnabled(false);
        jBExcluirAcao.setEnabled(true);
    }//GEN-LAST:event_jBSalvarAcaoActionPerformed

    private void jBCancelarAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarAcaoActionPerformed
        limpaCamposAcoes();
        habilitaCamposAcoes(false);
        
        jBNovoCredor.setEnabled(true);
        jBEditarAcao.setEnabled(false);
        jBSalvarAcao.setEnabled(false);
        jBCancelarAcao.setEnabled(false);
        jBExcluirAcao.setEnabled(false);
        jTAcoes.clearSelection();
        
        
    }//GEN-LAST:event_jBCancelarAcaoActionPerformed

    private void jBExcluirAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirAcaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBExcluirAcaoActionPerformed

    private void jBNovoNegociacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoNegociacaoActionPerformed
        CadastrarNegociacao cadNeg = new CadastrarNegociacao(devedor, cliente);
        cadNeg.setVisible(true);
    }//GEN-LAST:event_jBNovoNegociacaoActionPerformed

    private void jBEditarNegociacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarNegociacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBEditarNegociacaoActionPerformed

    private void jBSalvarNegociacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarNegociacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBSalvarNegociacaoActionPerformed

    private void jBCancelarNegociacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarNegociacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBCancelarNegociacaoActionPerformed

    private void jBExcluirNegociacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirNegociacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBExcluirNegociacaoActionPerformed

    private void jBEfetuarPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEfetuarPagamentoActionPerformed
        if(validaPagamentos()){
            if(jTPagamentos.getSelectedRow() != -1){
                PagamentosDAO pdao = new PagamentosDAO();
                Pagamentos p = new Pagamentos();

                p.setDataPagamento(converteDataParaBanco(jFTFDataPagamento.getText()));
                p.setDataVencimento(converteDataParaBanco(jFTFDataVencimento.getText()));
                p.setFormaPagamento(jCBFormaPagamentoPag.getSelectedItem().toString());
                p.setValorPago(Double.parseDouble(jTFValorPagoPag.getText().replace(",", ".")));
                p.setValorParcela(Double.parseDouble(jTFValorParcela.getText().replace(",", ".")));
                p.setEncargos(Double.parseDouble(jTFEncargos.getText().replace(",", ".")));
                p.setIdNegociacao(Integer.parseInt(jTPagamentos.getModel().getValueAt(jTPagamentos.getSelectedRow(), 1).toString()));
                p.setIdPagamento(Integer.parseInt(jTPagamentos.getModel().getValueAt(jTPagamentos.getSelectedRow(), 0).toString()));
                
                pdao.efetuarPagamento(p);

                limpaCamposPagamentos();
                habilitaCamposPagamentos(false);
                preencheTabelaPagamentos(p.getIdNegociacao());
                jTPagamentos.clearSelection();
                
                
                
                int linhac = jTDevedor.getSelectedRow();
                int linhaN = jTNegociacoes.getSelectedRow();
                modelDevedores.setRowCount(0);
                ClientesDAO cdao = new ClientesDAO();
                preencheTabelaDevedores(devedor.getIdDevedor());
                jTDevedor.setRowSelectionInterval(linhac, linhac);
                
                        
                modelNeg.setRowCount(0);
                NegociacaoDAO ndao = new NegociacaoDAO();
                preencheTabelaNegociacoes(ndao.buscaNegociacoesPorClienteEDevedor(cliente.getIdCliente(), devedor.getIdDevedor()));
                jTNegociacoes.setRowSelectionInterval(linhaN, linhaN);
                
                
            }else{
                JOptionPane.showMessageDialog(null, "Selecione um pagamento.");
            }
        }else
            JOptionPane.showMessageDialog(null, "Problemas nos dados de pagamento, por favor verifique!");

    }//GEN-LAST:event_jBEfetuarPagamentoActionPerformed

    private void jBEditarPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarPagamentoActionPerformed
        jFTFDataPagamento.setEnabled(true);
        jFTFDataVencimento.setEnabled(true);
        jCBFormaPagamentoPag.setEnabled(true);
        jTFValorParcela.setEnabled(true);
        jTFValorPagoPag.setEnabled(true);
        jTFEncargos.setEnabled(true);

        jBEditarPagamento.setEnabled(false);
        jBSalvarPagamento.setEnabled(true);
        jBCancelarPagamento.setEnabled(true);
        
        if(jCBPago.isSelected())
            jBExcluirPagamento.setEnabled(true);
        else
            jBEfetuarPagamento.setEnabled(true);
    }//GEN-LAST:event_jBEditarPagamentoActionPerformed

    private void jBSalvarPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarPagamentoActionPerformed
        Pagamentos p = new Pagamentos();
        PagamentosDAO pdao = new PagamentosDAO();
        
        if(validaPagamentos()){
            if(jTPagamentos.getSelectedRow() != -1){
                //atualiza
                p.setDataPagamento(converteDataParaBanco(jFTFDataPagamento.getText()));
                p.setDataVencimento(converteDataParaBanco(jFTFDataVencimento.getText()));
                p.setFormaPagamento(jCBFormaPagamentoPag.getSelectedItem().toString());
                p.setValorPago(Double.parseDouble(jTFValorPagoPag.getText().replace(",", ".")));
                p.setValorParcela(Double.parseDouble(jTFValorParcela.getText().replace(",", ".")));
                p.setEncargos(Double.parseDouble(jTFEncargos.getText().replace(",", ".")));
                p.setIdPagamento(Integer.parseInt(jTPagamentos.getModel().getValueAt(jTPagamentos.getSelectedRow(), 0).toString()));
                p.setIdNegociacao(Integer.parseInt(jTPagamentos.getModel().getValueAt(jTPagamentos.getSelectedRow(), 1).toString()));

                pdao.atualizaPagamento(p);

                limpaCamposPagamentos();
                habilitaCamposPagamentos(false);
                preencheTabelaPagamentos(p.getIdNegociacao());
                jTPagamentos.clearSelection();
            }else{
                JOptionPane.showMessageDialog(null, "Selecione um pagamento.");
            }
        }else
            JOptionPane.showMessageDialog(null, "Problemas nos dados de pagamento, por favor verifique!");
    }//GEN-LAST:event_jBSalvarPagamentoActionPerformed

    private void jBCancelarPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarPagamentoActionPerformed
        jTPagamentos.clearSelection();
        limpaCamposPagamentos();
        habilitaCamposPagamentos(false);
        jBSalvarPagamento.setEnabled(false);
        jBCancelarPagamento.setEnabled(false);
        jBEfetuarPagamento.setEnabled(false);
        jBExcluirPagamento.setEnabled(false);
        jBEditarPagamento.setEnabled(false);
    }//GEN-LAST:event_jBCancelarPagamentoActionPerformed

    private void jBExcluirPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirPagamentoActionPerformed
        PagamentosDAO pdao = new PagamentosDAO();
        Pagamentos p = new Pagamentos();
        
        int resposta = JOptionPane.showOptionDialog(null, "Deseja excluir o item?", "Aviso", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null, null, null);
        if (resposta == JOptionPane.YES_OPTION) {
            if(jTPagamentos.getSelectedRow() != -1){
                //atualiza
                p.setDataPagamento(converteDataParaBanco(jFTFDataPagamento.getText()));
                p.setDataVencimento(converteDataParaBanco(jFTFDataVencimento.getText()));
                p.setFormaPagamento(jCBFormaPagamentoPag.getSelectedItem().toString());
                p.setValorPago(Double.parseDouble(jTFValorPagoPag.getText()));
                p.setValorParcela(Double.parseDouble(jTFValorParcela.getText()));
                p.setEncargos(Double.parseDouble(jTFEncargos.getText()));
                p.setIdPagamento(Integer.parseInt(jTPagamentos.getModel().getValueAt(jTPagamentos.getSelectedRow(), 0).toString()));
                p.setIdNegociacao(Integer.parseInt(jTPagamentos.getModel().getValueAt(jTPagamentos.getSelectedRow(), 1).toString()));

                pdao.desfazerPagamento(p);
            }
        }
    }//GEN-LAST:event_jBExcluirPagamentoActionPerformed

    private void jBDesmarcarNegociacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDesmarcarNegociacaoActionPerformed
        jTNegociacoes.clearSelection();
        DebitosDAO ddao = new DebitosDAO();
        preencheTabelaDebitos(ddao.buscaDebitos(devedor.getIdDevedor()));
    }//GEN-LAST:event_jBDesmarcarNegociacaoActionPerformed

    private void jBEditaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditaClienteActionPerformed
        jTFNome.setEnabled(true);
        jTFCPF.setEnabled(true);
        jTFRazao.setEnabled(true);
        
        jBNovoCliente.setEnabled(false);
        jBEditaCliente.setEnabled(false);
        jBAtiva.setEnabled(false);
        jBSalvarCliente.setEnabled(true);
        jBCancelarCliente.setEnabled(true);
        
        jBSalvarCliente.setText("Gravar Devedor");
    }//GEN-LAST:event_jBEditaClienteActionPerformed

    private void jBNovoCredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoCredorActionPerformed
        limpaTabbedPane();
        limpaCamposCredor();
        
        jTDevedor.setEnabled(false);
        
        PesquisaClientes pesquisa = new PesquisaClientes();
        pesquisa.setListenerClientes(this);
        pesquisa.setVisible(true);
        
        habilitaCamposEndereco(false);
        habilitaCamposTel(false);
        habilitaCamposDebitos(false);
        habilitaCamposNegociacoes(false);
        habilitaCamposAcoes(false);
        habilitaCamposPagamentos(false);
        habilitaCamposCredor(true);
        
        jBNovoCredor.setEnabled(false);
        jBEditarCredor.setEnabled(false);
        jBSalvarCredor.setEnabled(true);
        jBCancelarCredor.setEnabled(true);
        jBExcluirCredor.setEnabled(false);
        jFTFDataCadastroCredor.setText(converteDataParaApresentacao(LocalDate.now()));
        
    }//GEN-LAST:event_jBNovoCredorActionPerformed

    private void jBEditarCredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarCredorActionPerformed
        habilitaCamposCredor(true);
        jBNovoCredor.setEnabled(false);
        jBEditarCredor.setEnabled(false);
        jBSalvarCredor.setEnabled(true);
        jBCancelarCredor.setEnabled(true);
        jBExcluirCredor.setEnabled(false);
    }//GEN-LAST:event_jBEditarCredorActionPerformed

    private void jBSalvarCredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarCredorActionPerformed
        if(validaCredor()){
            DevedoresDAO ddao = new DevedoresDAO();
            devedor.setAtivado(false);
            devedor.setDataCadastro(converteDataParaBanco(jFTFDataCadastroCredor.getText()));
            devedor.setDataFinalizacaoCobranca(converteDataParaBanco(jFTFDataFinalizacaoCobranca.getText()));
            devedor.setIdCliente(cliente.getIdCliente());
            devedor.setTaxaJuros(Double.parseDouble(jTFTaxaJuros.getText()));

            ddao.vinculaDevedorCliente(devedor);

            jTDevedor.setEnabled(true);
            limpaCamposCredor();
            habilitaCamposCredor(false);
            modelDevedores.setRowCount(0);
        }else{
            JOptionPane.showMessageDialog(null, "Problema nos dados inseridos, por favor verifique os campos de vínculo credor-devedor");
        }
    }//GEN-LAST:event_jBSalvarCredorActionPerformed

    private void jBCancelarCredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarCredorActionPerformed
        limpaCamposCredor();
        habilitaCamposCredor(false);
        jTDevedor.clearSelection();
        jTDevedor.setEnabled(true);
        jBNovoCredor.setEnabled(true);
        jBEditarCredor.setEnabled(true);
        jBSalvarCredor.setEnabled(false);
        jBCancelarCredor.setEnabled(false);
        jBExcluirCredor.setEnabled(true);
        
    }//GEN-LAST:event_jBCancelarCredorActionPerformed

    private void jBExcluirCredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirCredorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBExcluirCredorActionPerformed

    private void jBAtivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAtivaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBAtivaActionPerformed

    private void jTFCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFCPFFocusLost
        String texto = jTFCPF.getText();
            if(jTFCPF.getText().length() == 11){
                jTFCPF.setFormatterFactory(new DefaultFormatterFactory(cpfMask));
                cpfMask.install(jTFCPF);
                jTFCPF.setText(texto);
            }else if(jTFCPF.getText().length() == 14){
                jTFCPF.setFormatterFactory(new DefaultFormatterFactory(cnpjMask));
                cnpjMask.install(jTFCPF);
                jTFCPF.setText(texto);
            }else
                jTFCPF.setText("");
        
    }//GEN-LAST:event_jTFCPFFocusLost

    private void jTFCPFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFCPFFocusGained
        jTFCPF.setFormatterFactory(new DefaultFormatterFactory());
    }//GEN-LAST:event_jTFCPFFocusGained

    private void jTFValorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFValorFocusLost
        jTFValor.setText(decimalFormat.format(Double.parseDouble(jTFValor.getText().replaceAll(",", "."))));
    }//GEN-LAST:event_jTFValorFocusLost

    private void jTFValorTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFValorTotalFocusLost
        jTFValorTotal.setText(decimalFormat.format(Double.parseDouble(jTFValorTotal.getText().replaceAll(",", "."))));
    }//GEN-LAST:event_jTFValorTotalFocusLost

    private void jTFValorPagoNegFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFValorPagoNegFocusLost
        jTFValorPagoNeg.setText(decimalFormat.format(Double.parseDouble(jTFValorPagoNeg.getText().replaceAll(",", "."))));
    }//GEN-LAST:event_jTFValorPagoNegFocusLost

    private void jTFSaldoDevedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFSaldoDevedorFocusLost
        jTFSaldoDevedor.setText(decimalFormat.format(Double.parseDouble(jTFSaldoDevedor.getText().replaceAll(",", "."))));
    }//GEN-LAST:event_jTFSaldoDevedorFocusLost

    private void jTFValorParcelaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFValorParcelaFocusLost
        jTFValorParcela.setText(decimalFormat.format(Double.parseDouble(jTFValorParcela.getText().replaceAll(",", "."))));
    }//GEN-LAST:event_jTFValorParcelaFocusLost

    private void jTFValorPagoPagFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFValorPagoPagFocusLost
        jTFValorPagoPag.setText(decimalFormat.format(Double.parseDouble(jTFValorPagoPag.getText().replaceAll(",", "."))));
    }//GEN-LAST:event_jTFValorPagoPagFocusLost

    private void jTFEncargosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFEncargosFocusLost
        jTFEncargos.setText(decimalFormat.format(Double.parseDouble(jTFEncargos.getText().replace(",", "."))));
    }//GEN-LAST:event_jTFEncargosFocusLost

    private void jBAlterarComprovanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarComprovanteActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();

            arquivo = selectedFile;
            jTFComprovanteSelecionado.setText(arquivo.getName());
        }
    }//GEN-LAST:event_jBAlterarComprovanteActionPerformed

    @Override
    public void devedorSelecionado(Devedores devedor) {
        this.devedor = devedor;
        
        jTFNome.setText(devedor.getNomeDevedor());
        jTFRazao.setText(devedor.getRazao());
        jTFCPF.setText(devedor.getCpfcnpj());
    }
    
    @Override
    public void clienteSelecionado(Clientes cliente) {
        this.cliente = cliente;
        
        if(jTDevedor.getSelectedRow() != -1){
            jBNovoEnd.setEnabled(true);
            jBNovoTel.setEnabled(true);
        }
        
        TelefonesDAO tdao = new TelefonesDAO();
        EnderecosDAO edao = new EnderecosDAO();
        
        ArrayList<Telefones> listaTel = tdao.buscaTelefoneCliente(cliente.getIdCliente());
        ArrayList<Enderecos> listaEnd = edao.buscaEndCliente(cliente.getIdCliente());
        
        preencheTabelaDevedores(cliente.getIdCliente());
        preencheTabelaEnd(listaEnd);
        preencheTabelaTel(listaTel);
        
        jTFNome.setText(cliente.getNomeCliente());
        jTFRazao.setText(cliente.getRazao());
        jTFCPF.setText(cliente.getCpfcnpj());
        jTFValorEmCobranca.setText(String.valueOf(cliente.getValorEmCobranca()));
        jTFDiaReembolso.setText(String.valueOf(cliente.getDiaReembolso()));
        jTAInformacoesCliente.setText(cliente.getInformacoesAdicionais());
        jTFResponsavel.setText(cliente.getResponsavel());
        jTFComissao.setText(String.valueOf(cliente.getComissao()));
        jTFCustoNaoPago.setText(String.valueOf(cliente.getCustoDevedorNaoPago()));
    }
    
    private void camposDevedor(int idDevedor){
        DevedoresDAO ddao = new DevedoresDAO();
        Devedores devedor = ddao.buscaDevedorPorIdClienteEIdDevedor(idDevedor, cliente.getIdCliente());
        
        jFTFDataCadastroCredor.setText(converteDataParaApresentacao(devedor.getDataCadastro()));
        if(devedor.getAtivado()){
            jCBAtivo.setSelected(true);
            jBAtiva.setText("Desativar Devedor-Cliente");
        }else{
            jCBAtivo.setSelected(false);
            jBAtiva.setText("Ativar Devedor-Cliente");
        }
    }
    
    private void preencheTabelasVinculoDevedorCliente(){
        DebitosDAO ddao = new DebitosDAO();
        AcaoCobrancaDAO acdao = new AcaoCobrancaDAO();
        NegociacaoDAO negdao = new NegociacaoDAO();
        
        ArrayList<Debitos> listaDeb = ddao.buscaDebitosPorDevedorECliente(devedor.getIdDevedor(), cliente.getIdCliente());
        ArrayList<Negociacao> listaNeg = negdao.buscaNegociacoesPorClienteEDevedor(cliente.getIdCliente(), devedor.getIdDevedor());
        
        preencheTabelaDebitos(listaDeb);
        preencheTabelaNegociacoes(listaNeg);
        
        if(modelDeb.getRowCount()<1)
            JOptionPane.showMessageDialog(null, "Não existem débitos para esta relação cliente-devedor!");
        
        if(modelNeg.getRowCount()<1)
            JOptionPane.showMessageDialog(null, "Não existem negociações para esta relação cliente-devedor!");
        
        ArrayList<AcaoCobranca> listaAcoes = acdao.buscaAcoesPorDevedorECliente(cliente.getIdCliente(), devedor.getIdDevedor(), java.time.LocalDate.parse("1900-01-01"), java.time.LocalDate.now());
        preencheTabelaAcoes(listaAcoes);
        
    }
    
    private void preencheTabelaAcoes(ArrayList<AcaoCobranca> listaAcoes){
        modelAcoes = (DefaultTableModel) jTAcoes.getModel();
        modelAcoes.setNumRows(0);
        if(listaAcoes.isEmpty())
            JOptionPane.showMessageDialog(null, "Nenhuma ação encontrado para esta negociação");
        else
            for (int i = 0; i < listaAcoes.size(); i++) {
                modelAcoes.addRow(new Object[]{
                    listaAcoes.get(i).getIdAcao(),
                    listaAcoes.get(i).getTipoCobranca(),
                    converteDataParaApresentacao(listaAcoes.get(i).getDataCobranca()),
                    listaAcoes.get(i).getTextoCobranca()
                });
            }
    }
    
    private void preencheTabelaTel(ArrayList<Telefones> listaTel){
        modelTel = (DefaultTableModel) jTTelefone.getModel();
        modelTel.setNumRows(0);
        if(listaTel.isEmpty())
            JOptionPane.showMessageDialog(null, "Nenhum telefone encontrado para este devedor/cliente");
        else
            for (int i = 0; i < listaTel.size(); i++) {
                modelTel.addRow(new Object[]{
                    listaTel.get(i).getIdTelefone(),
                    listaTel.get(i).getTelefone(),
                    listaTel.get(i).getEmail(),
                    listaTel.get(i).getObs()                    
                });
            }
    }
    
    private void preencheTabelaEnd(ArrayList<Enderecos> listaEnd){
        modelEnd = (DefaultTableModel) jTEnd.getModel();
        modelEnd.setNumRows(0);
        if(listaEnd.isEmpty()){
            JOptionPane.showMessageDialog(null, "Nenhum endereço encontrado para este cliente");
        }else{
            for (int i = 0; i < listaEnd.size(); i++) {
                modelEnd.addRow(new Object[]{
                    listaEnd.get(i).getId(),
                    listaEnd.get(i).getCep(),
                    listaEnd.get(i).getRua(),
                    listaEnd.get(i).getNumero(),
                    listaEnd.get(i).getBairro(),
                    listaEnd.get(i).getCidade(),
                    listaEnd.get(i).getEstado(),
                    listaEnd.get(i).getReferencia(),
                    listaEnd.get(i).getComplemento()
                });
            }
        }
    } 
    
    private void preencheTabelaDebitos(ArrayList<Debitos> listaDebitos){
        DebitosDAO ddao = new DebitosDAO();
        NegociacaoDAO negDAO = new NegociacaoDAO();
        ClientesDAO cdao = new ClientesDAO();
        
        modelDeb = (DefaultTableModel) jTDebitos.getModel();
        modelDeb.setNumRows(0);
        if(listaDebitos.isEmpty()){
            JOptionPane.showMessageDialog(null, "Nenhum debito encontrado, verifique a negociação selecionada!");
        }else{
            
            for (int i = 0; i < listaDebitos.size(); i++) {
                modelDeb.addRow(new Object[]{
                    listaDebitos.get(i).getIdCompra(),
                    cdao.buscaNomeCliente(listaDebitos.get(i).getIdCliente()),
                    emNegociacao(negDAO, listaDebitos.get(i)),
                    converteDataParaApresentacao(listaDebitos.get(i).getDataCompra()),
                    listaDebitos.get(i).getValor(),
                    listaDebitos.get(i).getDescricao(),
                    listaDebitos.get(i).getComprovantes().get(0).getArquivo()
                });
            }
            // Configuração do renderizador personalizado para a coluna do botão
        jTDebitos.getColumn("Comprovante").setCellRenderer(new CadastroCliente.BotaoRenderer());

        // Configuração do editor de célula para a coluna do botão
        jTDebitos.getColumn("Comprovante").setCellEditor(new CadastroCliente.BotaoEditor());
        }
    }
    
    private void preencheTabelaNegociacoes(ArrayList<Negociacao> listaNeg){
        modelNeg = (DefaultTableModel) jTNegociacoes.getModel();
        modelNeg.setNumRows(0);
        if(listaNeg.isEmpty())
            JOptionPane.showMessageDialog(null, "Nenhuma negociação encontrada para este devedor/cliente");
        else
            for (int i = 0; i < listaNeg.size(); i++) {
                modelNeg.addRow(new Object[]{
                    listaNeg.get(i).getIdNegociacao(),
                    converteDataParaApresentacao(listaNeg.get(i).getDataNegociacao()),
                    converteDataParaApresentacao(listaNeg.get(i).getDataPrimeiraParcela()),
                    listaNeg.get(i).getValorTotal(),
                    listaNeg.get(i).getValorPago(),
                    listaNeg.get(i).getFormaPagamento(),
                    listaNeg.get(i).getnParcelas()
                });
            }
    }
    
    private void preencheTabelaPagamentos(int idNegociacao){
        PagamentosDAO pagdao = new PagamentosDAO();
        ArrayList<Pagamentos> listaPag = pagdao.buscaPagamentosPorNegociacao(idNegociacao);
        modelPag = (DefaultTableModel) jTPagamentos.getModel();
        modelPag.setNumRows(0);
        if(listaPag.isEmpty())
            JOptionPane.showMessageDialog(null, "Nenhum telefone encontrado para este devedor/cliente");
        else
            for (int i = 0; i < listaPag.size(); i++) {
                modelPag.addRow(new Object[]{
                    listaPag.get(i).getIdPagamento(),
                    listaPag.get(i).getIdNegociacao(),
                    converteDataParaApresentacao(listaPag.get(i).getDataPagamento()),
                    converteDataParaApresentacao(listaPag.get(i).getDataVencimento()),
                    listaPag.get(i).getFormaPagamento(),
                    listaPag.get(i).getValorParcela(),
                    listaPag.get(i).getValorPago()
                });
            }
    }
    
    private void preencheTabelaDevedores(int idCliente){
        DevedoresDAO ddao = new DevedoresDAO();
        Devedores devedor = new Devedores();
        
        ClientesDAO cdao = new ClientesDAO();
        ArrayList<Devedores> listaDev = ddao.buscaDevedoresPorCliente(idCliente);
        
        modelDevedores = (DefaultTableModel) jTDevedor.getModel();
        modelDevedores.setNumRows(0);
        if(listaDev.isEmpty())
            JOptionPane.showMessageDialog(null, "Nenhuma credor encontrado para este devedor");
        else
            for (int i = 0; i < listaDev.size(); i++) {
                modelDevedores.addRow(new Object[]{
                    listaDev.get(i).getIdDevedor(),
                    listaDev.get(i).getNomeDevedor(),
                    listaDev.get(i).getRazao(),
                    listaDev.get(i).getCpfcnpj(),
                    converteDataParaApresentacao(listaDev.get(i).getDataFinalizacaoCobranca()),
                    listaDev.get(i).getTaxaJuros(),
                    listaDev.get(i).getSaldoDevedor()                    
                });
            }
    }
    
    private String emNegociacao(NegociacaoDAO negDAO, Debitos listaDebitos){
        if(negDAO.debitoEmNegociacao(listaDebitos.getIdCompra()))
            return "Sim";
        else
            return "Não";
    }
    
    private void debitosDaNegociacao(int idNegociacao){
        DebitosDAO ddao = new DebitosDAO();
        
        ArrayList<Debitos> listaDebitos = ddao.getDebitosPorNegociacao(idNegociacao);
        preencheTabelaDebitos(listaDebitos);
    }
    
// Método para abrir o arquivo usando o Desktop
    private void abrirArquivo(String caminhoArquivo) {
        ConfiguracoesSistema conf = new ConfiguracoesSistema();
        Configuracoes config = conf.lerArquivo();
        
        try {
            File arquivo = new File(config.getPastaComprovantes()+caminhoArquivo);
            Desktop.getDesktop().open(arquivo);
        }catch(java.lang.IllegalArgumentException erro){
            JOptionPane.showMessageDialog(null, "Arquivo não encontrado! "+erro);
        }catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    // Editor de célula personalizado para lidar com o evento de clique do botão
    class BotaoEditor extends AbstractCellEditor implements TableCellEditor {
        Object valorCelula;
        private JButton button;

        public BotaoEditor() {
            button = new JButton();
            button.setOpaque(true);

            // Adiciona um ActionListener ao botão
            button.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String caminhoArquivo = "teste";
                    valorCelula = jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 5);
                    try{
                        if(jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 5) != null){
                            if(!jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 5).toString().isEmpty()){
                                caminhoArquivo = jTDebitos.getValueAt(jTDebitos.getSelectedRow(), 5).toString();
                                abrirArquivo(caminhoArquivo);
                            }else{
                                JOptionPane.showMessageDialog(null, "Não existe comprovante para esta compra!");
                            }
                        }else{
                            JOptionPane.showMessageDialog(null, "Não existe comprovante para esta compra!!");
                        }
                    }catch(java.lang.NullPointerException eNull){
                        System.out.println("erro-> "+eNull);
                    }
                }
            });
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            return button;
        }

        @Override
        public Object getCellEditorValue() {
            return valorCelula;
        }    
    }
    
    // Renderizador personalizado para exibir o botão na célula da tabela
    class BotaoRenderer extends JButton implements TableCellRenderer {
        public BotaoRenderer() {
            setOpaque(true);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText("Abrir comprovante");
            return this;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterarComprovante;
    private javax.swing.JButton jBAtiva;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBCancelarAcao;
    private javax.swing.JButton jBCancelarCliente;
    private javax.swing.JButton jBCancelarCredor;
    private javax.swing.JButton jBCancelarDebito;
    private javax.swing.JButton jBCancelarNegociacao;
    private javax.swing.JButton jBCancelarPagamento;
    private javax.swing.JButton jBCancelarTel;
    private javax.swing.JButton jBDesmarcarNegociacao;
    private javax.swing.JButton jBEditaCliente;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jBEditarAcao;
    private javax.swing.JButton jBEditarCredor;
    private javax.swing.JButton jBEditarDeb;
    private javax.swing.JButton jBEditarNegociacao;
    private javax.swing.JButton jBEditarPagamento;
    private javax.swing.JButton jBEditarTel;
    private javax.swing.JButton jBEfetuarPagamento;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBExcluirAcao;
    private javax.swing.JButton jBExcluirCredor;
    private javax.swing.JButton jBExcluirDebito;
    private javax.swing.JButton jBExcluirNegociacao;
    private javax.swing.JButton jBExcluirPagamento;
    private javax.swing.JButton jBExcluirTel;
    private javax.swing.JButton jBNovoAcao;
    private javax.swing.JButton jBNovoCliente;
    private javax.swing.JButton jBNovoCredor;
    private javax.swing.JButton jBNovoDeb;
    private javax.swing.JButton jBNovoEnd;
    private javax.swing.JButton jBNovoNegociacao;
    private javax.swing.JButton jBNovoTel;
    private javax.swing.JButton jBPesquisarDevedor;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JButton jBSalvarAcao;
    private javax.swing.JButton jBSalvarCliente;
    private javax.swing.JButton jBSalvarCredor;
    private javax.swing.JButton jBSalvarDebito;
    private javax.swing.JButton jBSalvarNegociacao;
    private javax.swing.JButton jBSalvarPagamento;
    private javax.swing.JButton jBSalvarTel;
    private javax.swing.JCheckBox jCBAtivo;
    private javax.swing.JComboBox<String> jCBEstados;
    private javax.swing.JComboBox<String> jCBFormaPagamento;
    private javax.swing.JComboBox<String> jCBFormaPagamentoPag;
    private javax.swing.JCheckBox jCBNegociacaoPaga;
    private javax.swing.JCheckBox jCBPago;
    private javax.swing.JComboBox<String> jCBTipoAcao;
    private javax.swing.JFormattedTextField jFTFDataAcao;
    private javax.swing.JFormattedTextField jFTFDataCadastroCredor;
    private javax.swing.JFormattedTextField jFTFDataCompra;
    private javax.swing.JFormattedTextField jFTFDataFinalizacaoCobranca;
    private javax.swing.JFormattedTextField jFTFDataNegociacao;
    private javax.swing.JFormattedTextField jFTFDataPagamento;
    private javax.swing.JFormattedTextField jFTFDataPrimeiraParcela;
    private javax.swing.JFormattedTextField jFTFDataVencimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPAcoesCobranca;
    private javax.swing.JPanel jPContatos;
    private javax.swing.JPanel jPCredores;
    private javax.swing.JPanel jPDebitos;
    private javax.swing.JPanel jPEnd;
    private javax.swing.JPanel jPNegociacoes;
    private javax.swing.JPanel jPPagamentos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTADescricao;
    private javax.swing.JTextArea jTADescricaoAcao;
    private javax.swing.JTextArea jTAInformacoesCliente;
    private javax.swing.JTextArea jTAObsTelefone;
    private javax.swing.JTextArea jTAReferencia;
    private javax.swing.JTable jTAcoes;
    private javax.swing.JTable jTDebitos;
    private javax.swing.JTable jTDevedor;
    private javax.swing.JTable jTEnd;
    private javax.swing.JTextField jTFBairro;
    private javax.swing.JFormattedTextField jTFCPF;
    private javax.swing.JTextField jTFCPFDevedor;
    private javax.swing.JTextField jTFCep;
    private javax.swing.JTextField jTFCidade;
    private javax.swing.JTextField jTFComissao;
    private javax.swing.JTextField jTFComplemento;
    private javax.swing.JTextField jTFComprovanteSelecionado;
    private javax.swing.JTextField jTFCustoNaoPago;
    private javax.swing.JTextField jTFDiaReembolso;
    private javax.swing.JTextField jTFEmail;
    private javax.swing.JTextField jTFEncargos;
    private javax.swing.JTextField jTFIDNegociacao;
    private javax.swing.JTextField jTFNParcelas;
    private javax.swing.JTextField jTFNome;
    private javax.swing.JTextField jTFNomeDevedor;
    private javax.swing.JTextField jTFNumeroEnd;
    private javax.swing.JTextField jTFRazao;
    private javax.swing.JTextField jTFRazaoDevedor;
    private javax.swing.JTextField jTFResponsavel;
    private javax.swing.JTextField jTFRua;
    private javax.swing.JTextField jTFSaldoDevedor;
    private javax.swing.JTextField jTFTaxaJuros;
    private javax.swing.JTextField jTFTelefone;
    private javax.swing.JTextField jTFValor;
    private javax.swing.JTextField jTFValorEmCobranca;
    private javax.swing.JTextField jTFValorPagoNeg;
    private javax.swing.JTextField jTFValorPagoPag;
    private javax.swing.JTextField jTFValorParcela;
    private javax.swing.JTextField jTFValorTotal;
    private javax.swing.JTable jTNegociacoes;
    private javax.swing.JTabbedPane jTPTabbedPane;
    private javax.swing.JTable jTPagamentos;
    private javax.swing.JTextField jTPesquisarCliente;
    private javax.swing.JTable jTTelefone;
    // End of variables declaration//GEN-END:variables

    
}
